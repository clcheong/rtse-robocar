
robocarChatGPT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000011a  00800100  00001168  000011fc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001168  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000389  0080021a  0080021a  00001316  2**0
                  ALLOC
  3 .comment      00000011  00000000  00000000  00001316  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001328  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000148  00000000  00000000  00001368  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000140f  00000000  00000000  000014b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000815  00000000  00000000  000028bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000009a3  00000000  00000000  000030d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000064  00000000  00000000  00003a78  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000613  00000000  00000000  00003adc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000000a0  00000000  00000000  000040ef  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000018  00000000  00000000  0000418f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
       4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
       c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      40:	0c 94 f1 03 	jmp	0x7e2	; 0x7e2 <OSTickISR>
      44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
      64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	12 e0       	ldi	r17, 0x02	; 2
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	e8 e6       	ldi	r30, 0x68	; 104
      7c:	f1 e1       	ldi	r31, 0x11	; 17
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	aa 31       	cpi	r26, 0x1A	; 26
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	25 e0       	ldi	r18, 0x05	; 5
      8c:	aa e1       	ldi	r26, 0x1A	; 26
      8e:	b2 e0       	ldi	r27, 0x02	; 2
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a3 3a       	cpi	r26, 0xA3	; 163
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 2a 08 	call	0x1054	; 0x1054 <main>
      9e:	0c 94 b2 08 	jmp	0x1164	; 0x1164 <_exit>

000000a2 <__bad_interrupt>:
      a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <CheckCollision>:
void CheckCollision (void *data)
{
    for(;;)
    {
        if ( (robo_proxSensor() == 1) )             /* obstacle?                         */
            myrobot.obstacle = 1;                   /* signal obstacle present           */
      a6:	c1 e0       	ldi	r28, 0x01	; 1
/*------High pririority task----------*/
void CheckCollision (void *data)
{
    for(;;)
    {
        if ( (robo_proxSensor() == 1) )             /* obstacle?                         */
      a8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <robo_proxSensor>
      ac:	01 97       	sbiw	r24, 0x01	; 1
      ae:	51 f4       	brne	.+20     	; 0xc4 <CheckCollision+0x1e>
            myrobot.obstacle = 1;                   /* signal obstacle present           */
      b0:	c0 93 9e 02 	sts	0x029E, r28	; 0x80029e <myrobot+0x4>
        else
            myrobot.obstacle = 0;                   /* signal no obstacle                */

		OSTimeDlyHMSM(0, 0, 0, 100);                /* Task period ~ 100 ms              */
      b4:	24 e6       	ldi	r18, 0x64	; 100
      b6:	30 e0       	ldi	r19, 0x00	; 0
      b8:	40 e0       	ldi	r20, 0x00	; 0
      ba:	60 e0       	ldi	r22, 0x00	; 0
      bc:	80 e0       	ldi	r24, 0x00	; 0
      be:	0e 94 bf 07 	call	0xf7e	; 0xf7e <OSTimeDlyHMSM>
/*------High pririority task----------*/
void CheckCollision (void *data)
{
    for(;;)
    {
        if ( (robo_proxSensor() == 1) )             /* obstacle?                         */
      c2:	f2 cf       	rjmp	.-28     	; 0xa8 <CheckCollision+0x2>
            myrobot.obstacle = 1;                   /* signal obstacle present           */
        else
            myrobot.obstacle = 0;                   /* signal no obstacle                */
      c4:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <myrobot+0x4>
      c8:	f5 cf       	rjmp	.-22     	; 0xb4 <CheckCollision+0xe>

000000ca <CntrlMotors>:

    for(;;)
    {
        speed_r = myrobot.rspeed;
        speed_l = myrobot.lspeed;
        robo_motorSpeed(speed_l, speed_r);
      ca:	60 91 9a 02 	lds	r22, 0x029A	; 0x80029a <myrobot>
      ce:	70 91 9b 02 	lds	r23, 0x029B	; 0x80029b <myrobot+0x1>
      d2:	80 91 9c 02 	lds	r24, 0x029C	; 0x80029c <myrobot+0x2>
      d6:	90 91 9d 02 	lds	r25, 0x029D	; 0x80029d <myrobot+0x3>
      da:	0e 94 98 01 	call	0x330	; 0x330 <robo_motorSpeed>
        OSTimeDlyHMSM(0, 0, 0, 250);                /* Task period ~ 250 ms              */
      de:	2a ef       	ldi	r18, 0xFA	; 250
      e0:	30 e0       	ldi	r19, 0x00	; 0
      e2:	40 e0       	ldi	r20, 0x00	; 0
      e4:	60 e0       	ldi	r22, 0x00	; 0
      e6:	80 e0       	ldi	r24, 0x00	; 0
      e8:	0e 94 bf 07 	call	0xf7e	; 0xf7e <OSTimeDlyHMSM>
      ec:	ee cf       	rjmp	.-36     	; 0xca <CntrlMotors>

000000ee <Navig>:
            myrobot.rspeed   = -LOW_SPEED;          /* REVERSE */
            myrobot.lspeed   = -LOW_SPEED;
        }
        else                                        /* obstacle is far away & no collision   */
        {
            myrobot.rspeed   = MEDIUM_SPEED;        /* move forward with medium speed        */
      ee:	02 e3       	ldi	r16, 0x32	; 50
      f0:	10 e0       	ldi	r17, 0x00	; 0
{
    for (;;)
    {
        if (myrobot.obstacle == 1)                  /* If blocked then reverse              */
        {
            myrobot.rspeed   = -LOW_SPEED;          /* REVERSE */
      f2:	c2 ee       	ldi	r28, 0xE2	; 226
      f4:	df ef       	ldi	r29, 0xFF	; 255
        }

		if (robo_lightSensor() > 60)                /* it is too bright, I'm photophobia     */
		{
			myrobot.rspeed   = -LOW_SPEED;          /* turn right to avoid                   */
            myrobot.lspeed   =  LOW_SPEED;
      f6:	8e e1       	ldi	r24, 0x1E	; 30
      f8:	e8 2e       	mov	r14, r24
      fa:	f1 2c       	mov	r15, r1

void Navig (void *data)
{
    for (;;)
    {
        if (myrobot.obstacle == 1)                  /* If blocked then reverse              */
      fc:	80 91 9e 02 	lds	r24, 0x029E	; 0x80029e <myrobot+0x4>
     100:	81 30       	cpi	r24, 0x01	; 1
     102:	e1 f4       	brne	.+56     	; 0x13c <Navig+0x4e>
        {
            myrobot.rspeed   = -LOW_SPEED;          /* REVERSE */
     104:	d0 93 9b 02 	sts	0x029B, r29	; 0x80029b <myrobot+0x1>
     108:	c0 93 9a 02 	sts	0x029A, r28	; 0x80029a <myrobot>
            myrobot.lspeed   = -LOW_SPEED;
     10c:	d0 93 9d 02 	sts	0x029D, r29	; 0x80029d <myrobot+0x3>
     110:	c0 93 9c 02 	sts	0x029C, r28	; 0x80029c <myrobot+0x2>
        {
            myrobot.rspeed   = MEDIUM_SPEED;        /* move forward with medium speed        */
            myrobot.lspeed   = MEDIUM_SPEED;
        }

		if (robo_lightSensor() > 60)                /* it is too bright, I'm photophobia     */
     114:	0e 94 ff 01 	call	0x3fe	; 0x3fe <robo_lightSensor>
     118:	cd 97       	sbiw	r24, 0x3d	; 61
     11a:	44 f0       	brlt	.+16     	; 0x12c <Navig+0x3e>
		{
			myrobot.rspeed   = -LOW_SPEED;          /* turn right to avoid                   */
     11c:	d0 93 9b 02 	sts	0x029B, r29	; 0x80029b <myrobot+0x1>
     120:	c0 93 9a 02 	sts	0x029A, r28	; 0x80029a <myrobot>
            myrobot.lspeed   =  LOW_SPEED;
     124:	f0 92 9d 02 	sts	0x029D, r15	; 0x80029d <myrobot+0x3>
     128:	e0 92 9c 02 	sts	0x029C, r14	; 0x80029c <myrobot+0x2>
		}
        OSTimeDlyHMSM(0, 0, 0, 500);                /* Task period ~ 500 ms                  */
     12c:	24 ef       	ldi	r18, 0xF4	; 244
     12e:	31 e0       	ldi	r19, 0x01	; 1
     130:	40 e0       	ldi	r20, 0x00	; 0
     132:	60 e0       	ldi	r22, 0x00	; 0
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	0e 94 bf 07 	call	0xf7e	; 0xf7e <OSTimeDlyHMSM>

void Navig (void *data)
{
    for (;;)
    {
        if (myrobot.obstacle == 1)                  /* If blocked then reverse              */
     13a:	e0 cf       	rjmp	.-64     	; 0xfc <Navig+0xe>
            myrobot.rspeed   = -LOW_SPEED;          /* REVERSE */
            myrobot.lspeed   = -LOW_SPEED;
        }
        else                                        /* obstacle is far away & no collision   */
        {
            myrobot.rspeed   = MEDIUM_SPEED;        /* move forward with medium speed        */
     13c:	10 93 9b 02 	sts	0x029B, r17	; 0x80029b <myrobot+0x1>
     140:	00 93 9a 02 	sts	0x029A, r16	; 0x80029a <myrobot>
            myrobot.lspeed   = MEDIUM_SPEED;
     144:	10 93 9d 02 	sts	0x029D, r17	; 0x80029d <myrobot+0x3>
     148:	00 93 9c 02 	sts	0x029C, r16	; 0x80029c <myrobot+0x2>
     14c:	e3 cf       	rjmp	.-58     	; 0x114 <Navig+0x26>

0000014e <TaskStart>:

/*------Highest pririority task----------*/
/* Create all other tasks here           */
void TaskStart( void *data )
{
    OS_ticks_init();                                        /* enable RTOS timer tick        */
     14e:	0e 94 66 02 	call	0x4cc	; 0x4cc <OS_ticks_init>

    OSTaskCreate(CheckCollision,                            /* Task function                 */
     152:	22 e0       	ldi	r18, 0x02	; 2
     154:	49 e9       	ldi	r20, 0x99	; 153
     156:	52 e0       	ldi	r21, 0x02	; 2
     158:	70 e0       	ldi	r23, 0x00	; 0
     15a:	60 e0       	ldi	r22, 0x00	; 0
     15c:	83 e5       	ldi	r24, 0x53	; 83
     15e:	90 e0       	ldi	r25, 0x00	; 0
     160:	0e 94 6e 06 	call	0xcdc	; 0xcdc <OSTaskCreate>
                (void *)0,                                  /* nothing passed to task        */
                (void *)&ChkCollideStk[TASK_STK_SZ - 1],    /* stack allocated to task       */
                TASK_CHKCOLLIDE_PRIO);                      /* priority of task              */

    OSTaskCreate(CntrlMotors,                               /* Task function                 */
     164:	23 e0       	ldi	r18, 0x03	; 3
     166:	4e e1       	ldi	r20, 0x1E	; 30
     168:	53 e0       	ldi	r21, 0x03	; 3
     16a:	70 e0       	ldi	r23, 0x00	; 0
     16c:	60 e0       	ldi	r22, 0x00	; 0
     16e:	85 e6       	ldi	r24, 0x65	; 101
     170:	90 e0       	ldi	r25, 0x00	; 0
     172:	0e 94 6e 06 	call	0xcdc	; 0xcdc <OSTaskCreate>
                (void *)0,                                  /* nothing passed to task        */
                (void *)&CtrlmotorStk[TASK_STK_SZ - 1],     /* stack allocated to task       */
                TASK_CTRLMOTOR_PRIO);                       /* priority of task              */

    OSTaskCreate(Navig,                                     /* Task function                 */
     176:	24 e0       	ldi	r18, 0x04	; 4
     178:	4e e1       	ldi	r20, 0x1E	; 30
     17a:	54 e0       	ldi	r21, 0x04	; 4
     17c:	70 e0       	ldi	r23, 0x00	; 0
     17e:	60 e0       	ldi	r22, 0x00	; 0
     180:	87 e7       	ldi	r24, 0x77	; 119
     182:	90 e0       	ldi	r25, 0x00	; 0
     184:	0e 94 6e 06 	call	0xcdc	; 0xcdc <OSTaskCreate>
                TASK_NAVIG_PRIO);                           /* priority of task              */

    while(1)
    {
        OSTimeDlyHMSM(0, 0, 5, 0);                          /* Task period ~ 5 secs          */
        robo_LED_toggle();                                  /* Show that we are alive        */
     188:	c1 e0       	ldi	r28, 0x01	; 1
                (void *)&NavigStk[TASK_STK_SZ - 1],         /* stack allocated to task       */
                TASK_NAVIG_PRIO);                           /* priority of task              */

    while(1)
    {
        OSTimeDlyHMSM(0, 0, 5, 0);                          /* Task period ~ 5 secs          */
     18a:	30 e0       	ldi	r19, 0x00	; 0
     18c:	20 e0       	ldi	r18, 0x00	; 0
     18e:	45 e0       	ldi	r20, 0x05	; 5
     190:	60 e0       	ldi	r22, 0x00	; 0
     192:	80 e0       	ldi	r24, 0x00	; 0
     194:	0e 94 bf 07 	call	0xf7e	; 0xf7e <OSTimeDlyHMSM>
        robo_LED_toggle();                                  /* Show that we are alive        */
     198:	85 b1       	in	r24, 0x05	; 5
     19a:	8c 27       	eor	r24, r28
     19c:	85 b9       	out	0x05, r24	; 5
     19e:	f5 cf       	rjmp	.-22     	; 0x18a <TaskStart+0x3c>

000001a0 <ADC_init>:
     1a0:	80 e4       	ldi	r24, 0x40	; 64
     1a2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     1a6:	86 e8       	ldi	r24, 0x86	; 134
     1a8:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1ac:	08 95       	ret

000001ae <ADC_read>:
     1ae:	f8 94       	cli
     1b0:	80 64       	ori	r24, 0x40	; 64
     1b2:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
     1b6:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1ba:	80 64       	ori	r24, 0x40	; 64
     1bc:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1c0:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1c4:	84 ff       	sbrs	r24, 4
     1c6:	fc cf       	rjmp	.-8      	; 0x1c0 <ADC_read+0x12>
     1c8:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1cc:	80 61       	ori	r24, 0x10	; 16
     1ce:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
     1d2:	78 94       	sei
     1d4:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__DATA_REGION_ORIGIN__+0x18>
     1d8:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__DATA_REGION_ORIGIN__+0x19>
     1dc:	93 70       	andi	r25, 0x03	; 3
     1de:	08 95       	ret

000001e0 <PWM8_write>:
     1e0:	81 11       	cpse	r24, r1
     1e2:	05 c0       	rjmp	.+10     	; 0x1ee <PWM8_write+0xe>
     1e4:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     1e8:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     1ec:	08 95       	ret
     1ee:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     1f2:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
     1f6:	08 95       	ret

000001f8 <motor_init>:
     1f8:	8a b1       	in	r24, 0x0a	; 10
     1fa:	80 6f       	ori	r24, 0xF0	; 240
     1fc:	8a b9       	out	0x0a, r24	; 10
     1fe:	8b b1       	in	r24, 0x0b	; 11
     200:	8f 70       	andi	r24, 0x0F	; 15
     202:	8b b9       	out	0x0b, r24	; 11
     204:	81 ea       	ldi	r24, 0xA1	; 161
     206:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__DATA_REGION_ORIGIN__+0x20>
     20a:	83 e0       	ldi	r24, 0x03	; 3
     20c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__DATA_REGION_ORIGIN__+0x21>
     210:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     214:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
     218:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     21c:	a8 e8       	ldi	r26, 0x88	; 136
     21e:	b0 e0       	ldi	r27, 0x00	; 0
     220:	1c 92       	st	X, r1
     222:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     226:	ea e8       	ldi	r30, 0x8A	; 138
     228:	f0 e0       	ldi	r31, 0x00	; 0
     22a:	10 82       	st	Z, r1
     22c:	84 b1       	in	r24, 0x04	; 4
     22e:	86 60       	ori	r24, 0x06	; 6
     230:	84 b9       	out	0x04, r24	; 4
     232:	11 96       	adiw	r26, 0x01	; 1
     234:	1c 92       	st	X, r1
     236:	1e 92       	st	-X, r1
     238:	11 82       	std	Z+1, r1	; 0x01
     23a:	10 82       	st	Z, r1
     23c:	08 95       	ret

0000023e <motor_set_speed>:
     23e:	77 ff       	sbrs	r23, 7
     240:	02 c0       	rjmp	.+4      	; 0x246 <motor_set_speed+0x8>
     242:	70 e0       	ldi	r23, 0x00	; 0
     244:	60 e0       	ldi	r22, 0x00	; 0
     246:	65 36       	cpi	r22, 0x65	; 101
     248:	71 05       	cpc	r23, r1
     24a:	14 f0       	brlt	.+4      	; 0x250 <motor_set_speed+0x12>
     24c:	64 e6       	ldi	r22, 0x64	; 100
     24e:	70 e0       	ldi	r23, 0x00	; 0
     250:	9b 01       	movw	r18, r22
     252:	22 0f       	add	r18, r18
     254:	33 1f       	adc	r19, r19
     256:	75 95       	asr	r23
     258:	67 95       	ror	r22
     25a:	62 0f       	add	r22, r18
     25c:	73 1f       	adc	r23, r19
     25e:	81 11       	cpse	r24, r1
     260:	09 c0       	rjmp	.+18     	; 0x274 <motor_set_speed+0x36>
     262:	70 93 8b 00 	sts	0x008B, r23	; 0x80008b <__DATA_REGION_ORIGIN__+0x2b>
     266:	60 93 8a 00 	sts	0x008A, r22	; 0x80008a <__DATA_REGION_ORIGIN__+0x2a>
     26a:	70 93 20 04 	sts	0x0420, r23	; 0x800420 <rightWst+0x1>
     26e:	60 93 1f 04 	sts	0x041F, r22	; 0x80041f <rightWst>
     272:	08 95       	ret
     274:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
     278:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
     27c:	70 93 24 04 	sts	0x0424, r23	; 0x800424 <leftWst+0x1>
     280:	60 93 23 04 	sts	0x0423, r22	; 0x800423 <leftWst>
     284:	08 95       	ret

00000286 <motor_set_dir>:
     286:	cf 93       	push	r28
     288:	c6 2f       	mov	r28, r22
     28a:	26 2f       	mov	r18, r22
     28c:	30 e0       	ldi	r19, 0x00	; 0
     28e:	81 11       	cpse	r24, r1
     290:	2b c0       	rjmp	.+86     	; 0x2e8 <motor_set_dir+0x62>
     292:	80 91 21 04 	lds	r24, 0x0421	; 0x800421 <rightWst+0x2>
     296:	90 91 22 04 	lds	r25, 0x0422	; 0x800422 <rightWst+0x3>
     29a:	82 17       	cp	r24, r18
     29c:	93 07       	cpc	r25, r19
     29e:	59 f0       	breq	.+22     	; 0x2b6 <motor_set_dir+0x30>
     2a0:	70 e0       	ldi	r23, 0x00	; 0
     2a2:	60 e0       	ldi	r22, 0x00	; 0
     2a4:	80 e0       	ldi	r24, 0x00	; 0
     2a6:	0e 94 1f 01 	call	0x23e	; 0x23e <motor_set_speed>
     2aa:	8f e9       	ldi	r24, 0x9F	; 159
     2ac:	9f e0       	ldi	r25, 0x0F	; 15
     2ae:	01 97       	sbiw	r24, 0x01	; 1
     2b0:	f1 f7       	brne	.-4      	; 0x2ae <motor_set_dir+0x28>
     2b2:	00 c0       	rjmp	.+0      	; 0x2b4 <motor_set_dir+0x2e>
     2b4:	00 00       	nop
     2b6:	c1 11       	cpse	r28, r1
     2b8:	0e c0       	rjmp	.+28     	; 0x2d6 <motor_set_dir+0x50>
     2ba:	5e 98       	cbi	0x0b, 6	; 11
     2bc:	5f 9a       	sbi	0x0b, 7	; 11
     2be:	10 92 22 04 	sts	0x0422, r1	; 0x800422 <rightWst+0x3>
     2c2:	10 92 21 04 	sts	0x0421, r1	; 0x800421 <rightWst+0x2>
     2c6:	8f e3       	ldi	r24, 0x3F	; 63
     2c8:	9c e9       	ldi	r25, 0x9C	; 156
     2ca:	01 97       	sbiw	r24, 0x01	; 1
     2cc:	f1 f7       	brne	.-4      	; 0x2ca <motor_set_dir+0x44>
     2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <motor_set_dir+0x4a>
     2d0:	00 00       	nop
     2d2:	cf 91       	pop	r28
     2d4:	08 95       	ret
     2d6:	5e 9a       	sbi	0x0b, 6	; 11
     2d8:	5f 98       	cbi	0x0b, 7	; 11
     2da:	81 e0       	ldi	r24, 0x01	; 1
     2dc:	90 e0       	ldi	r25, 0x00	; 0
     2de:	90 93 22 04 	sts	0x0422, r25	; 0x800422 <rightWst+0x3>
     2e2:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <rightWst+0x2>
     2e6:	ef cf       	rjmp	.-34     	; 0x2c6 <motor_set_dir+0x40>
     2e8:	80 91 25 04 	lds	r24, 0x0425	; 0x800425 <leftWst+0x2>
     2ec:	90 91 26 04 	lds	r25, 0x0426	; 0x800426 <leftWst+0x3>
     2f0:	82 17       	cp	r24, r18
     2f2:	93 07       	cpc	r25, r19
     2f4:	59 f0       	breq	.+22     	; 0x30c <motor_set_dir+0x86>
     2f6:	70 e0       	ldi	r23, 0x00	; 0
     2f8:	60 e0       	ldi	r22, 0x00	; 0
     2fa:	81 e0       	ldi	r24, 0x01	; 1
     2fc:	0e 94 1f 01 	call	0x23e	; 0x23e <motor_set_speed>
     300:	8f e9       	ldi	r24, 0x9F	; 159
     302:	9f e0       	ldi	r25, 0x0F	; 15
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	f1 f7       	brne	.-4      	; 0x304 <motor_set_dir+0x7e>
     308:	00 c0       	rjmp	.+0      	; 0x30a <motor_set_dir+0x84>
     30a:	00 00       	nop
     30c:	c1 11       	cpse	r28, r1
     30e:	07 c0       	rjmp	.+14     	; 0x31e <motor_set_dir+0x98>
     310:	5c 9a       	sbi	0x0b, 4	; 11
     312:	5d 98       	cbi	0x0b, 5	; 11
     314:	10 92 26 04 	sts	0x0426, r1	; 0x800426 <leftWst+0x3>
     318:	10 92 25 04 	sts	0x0425, r1	; 0x800425 <leftWst+0x2>
     31c:	d4 cf       	rjmp	.-88     	; 0x2c6 <motor_set_dir+0x40>
     31e:	5c 98       	cbi	0x0b, 4	; 11
     320:	5d 9a       	sbi	0x0b, 5	; 11
     322:	81 e0       	ldi	r24, 0x01	; 1
     324:	90 e0       	ldi	r25, 0x00	; 0
     326:	90 93 26 04 	sts	0x0426, r25	; 0x800426 <leftWst+0x3>
     32a:	80 93 25 04 	sts	0x0425, r24	; 0x800425 <leftWst+0x2>
     32e:	cb cf       	rjmp	.-106    	; 0x2c6 <motor_set_dir+0x40>

00000330 <robo_motorSpeed>:
     330:	0f 93       	push	r16
     332:	1f 93       	push	r17
     334:	cf 93       	push	r28
     336:	df 93       	push	r29
     338:	ec 01       	movw	r28, r24
     33a:	8b 01       	movw	r16, r22
     33c:	97 ff       	sbrs	r25, 7
     33e:	1c c0       	rjmp	.+56     	; 0x378 <robo_motorSpeed+0x48>
     340:	61 e0       	ldi	r22, 0x01	; 1
     342:	81 e0       	ldi	r24, 0x01	; 1
     344:	0e 94 43 01 	call	0x286	; 0x286 <motor_set_dir>
     348:	d1 95       	neg	r29
     34a:	c1 95       	neg	r28
     34c:	d1 09       	sbc	r29, r1
     34e:	17 ff       	sbrs	r17, 7
     350:	18 c0       	rjmp	.+48     	; 0x382 <robo_motorSpeed+0x52>
     352:	61 e0       	ldi	r22, 0x01	; 1
     354:	80 e0       	ldi	r24, 0x00	; 0
     356:	0e 94 43 01 	call	0x286	; 0x286 <motor_set_dir>
     35a:	11 95       	neg	r17
     35c:	01 95       	neg	r16
     35e:	11 09       	sbc	r17, r1
     360:	b8 01       	movw	r22, r16
     362:	80 e0       	ldi	r24, 0x00	; 0
     364:	0e 94 1f 01 	call	0x23e	; 0x23e <motor_set_speed>
     368:	be 01       	movw	r22, r28
     36a:	81 e0       	ldi	r24, 0x01	; 1
     36c:	df 91       	pop	r29
     36e:	cf 91       	pop	r28
     370:	1f 91       	pop	r17
     372:	0f 91       	pop	r16
     374:	0c 94 1f 01 	jmp	0x23e	; 0x23e <motor_set_speed>
     378:	60 e0       	ldi	r22, 0x00	; 0
     37a:	81 e0       	ldi	r24, 0x01	; 1
     37c:	0e 94 43 01 	call	0x286	; 0x286 <motor_set_dir>
     380:	e6 cf       	rjmp	.-52     	; 0x34e <robo_motorSpeed+0x1e>
     382:	60 e0       	ldi	r22, 0x00	; 0
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	0e 94 43 01 	call	0x286	; 0x286 <motor_set_dir>
     38a:	ea cf       	rjmp	.-44     	; 0x360 <robo_motorSpeed+0x30>

0000038c <USART0_init>:
     38c:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
     390:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
     394:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     398:	88 e1       	ldi	r24, 0x18	; 24
     39a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
     39e:	86 e0       	ldi	r24, 0x06	; 6
     3a0:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
     3a4:	08 95       	ret

000003a6 <cputchar>:
     3a6:	90 91 c0 00 	lds	r25, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     3aa:	95 ff       	sbrs	r25, 5
     3ac:	fc cf       	rjmp	.-8      	; 0x3a6 <cputchar>
     3ae:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     3b2:	08 95       	ret

000003b4 <cgetchar>:
     3b4:	cf 93       	push	r28
     3b6:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
     3ba:	87 ff       	sbrs	r24, 7
     3bc:	fc cf       	rjmp	.-8      	; 0x3b6 <cgetchar+0x2>
     3be:	c0 91 c6 00 	lds	r28, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
     3c2:	8c 2f       	mov	r24, r28
     3c4:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <cputchar>
     3c8:	8c 2f       	mov	r24, r28
     3ca:	cf 91       	pop	r28
     3cc:	08 95       	ret

000003ce <cputs>:
     3ce:	cf 93       	push	r28
     3d0:	df 93       	push	r29
     3d2:	ec 01       	movw	r28, r24
     3d4:	89 91       	ld	r24, Y+
     3d6:	81 11       	cpse	r24, r1
     3d8:	03 c0       	rjmp	.+6      	; 0x3e0 <cputs+0x12>
     3da:	df 91       	pop	r29
     3dc:	cf 91       	pop	r28
     3de:	08 95       	ret
     3e0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <cputchar>
     3e4:	f7 cf       	rjmp	.-18     	; 0x3d4 <cputs+0x6>

000003e6 <robo_proxSensor>:
     3e6:	80 e0       	ldi	r24, 0x00	; 0
     3e8:	0e 94 d7 00 	call	0x1ae	; 0x1ae <ADC_read>
     3ec:	21 e0       	ldi	r18, 0x01	; 1
     3ee:	30 e0       	ldi	r19, 0x00	; 0
     3f0:	84 36       	cpi	r24, 0x64	; 100
     3f2:	91 05       	cpc	r25, r1
     3f4:	10 f0       	brcs	.+4      	; 0x3fa <robo_proxSensor+0x14>
     3f6:	30 e0       	ldi	r19, 0x00	; 0
     3f8:	20 e0       	ldi	r18, 0x00	; 0
     3fa:	c9 01       	movw	r24, r18
     3fc:	08 95       	ret

000003fe <robo_lightSensor>:
     3fe:	84 e0       	ldi	r24, 0x04	; 4
     400:	0e 94 d7 00 	call	0x1ae	; 0x1ae <ADC_read>
     404:	2b ef       	ldi	r18, 0xFB	; 251
     406:	ac 01       	movw	r20, r24
     408:	24 03       	mulsu	r18, r20
     40a:	c0 01       	movw	r24, r0
     40c:	25 9f       	mul	r18, r21
     40e:	90 0d       	add	r25, r0
     410:	11 24       	eor	r1, r1
     412:	85 50       	subi	r24, 0x05	; 5
     414:	9c 4e       	sbci	r25, 0xEC	; 236
     416:	63 e3       	ldi	r22, 0x33	; 51
     418:	70 e0       	ldi	r23, 0x00	; 0
     41a:	0e 94 62 08 	call	0x10c4	; 0x10c4 <__divmodhi4>
     41e:	cb 01       	movw	r24, r22
     420:	65 36       	cpi	r22, 0x65	; 101
     422:	71 05       	cpc	r23, r1
     424:	14 f0       	brlt	.+4      	; 0x42a <__FUSE_REGION_LENGTH__+0x2a>
     426:	84 e6       	ldi	r24, 0x64	; 100
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	08 95       	ret

0000042c <robo_lineSensor>:
     42c:	cf 93       	push	r28
     42e:	df 93       	push	r29
     430:	c0 e0       	ldi	r28, 0x00	; 0
     432:	d1 e0       	ldi	r29, 0x01	; 1
     434:	cc 0f       	add	r28, r28
     436:	8d 2f       	mov	r24, r29
     438:	0e 94 d7 00 	call	0x1ae	; 0x1ae <ADC_read>
     43c:	8c 32       	cpi	r24, 0x2C	; 44
     43e:	91 40       	sbci	r25, 0x01	; 1
     440:	0c f4       	brge	.+2      	; 0x444 <robo_lineSensor+0x18>
     442:	c1 60       	ori	r28, 0x01	; 1
     444:	df 5f       	subi	r29, 0xFF	; 255
     446:	d4 30       	cpi	r29, 0x04	; 4
     448:	a9 f7       	brne	.-22     	; 0x434 <robo_lineSensor+0x8>
     44a:	8c 2f       	mov	r24, r28
     44c:	90 e0       	ldi	r25, 0x00	; 0
     44e:	df 91       	pop	r29
     450:	cf 91       	pop	r28
     452:	08 95       	ret

00000454 <robo_bumpSensorR>:
     454:	83 b1       	in	r24, 0x03	; 3
     456:	82 95       	swap	r24
     458:	8f 70       	andi	r24, 0x0F	; 15
     45a:	91 e0       	ldi	r25, 0x01	; 1
     45c:	89 27       	eor	r24, r25
     45e:	81 70       	andi	r24, 0x01	; 1
     460:	90 e0       	ldi	r25, 0x00	; 0
     462:	08 95       	ret

00000464 <robo_bumpSensorL>:
     464:	83 b1       	in	r24, 0x03	; 3
     466:	86 95       	lsr	r24
     468:	86 95       	lsr	r24
     46a:	86 95       	lsr	r24
     46c:	91 e0       	ldi	r25, 0x01	; 1
     46e:	89 27       	eor	r24, r25
     470:	81 70       	andi	r24, 0x01	; 1
     472:	90 e0       	ldi	r25, 0x00	; 0
     474:	08 95       	ret

00000476 <robo_Honk>:
     476:	5b 9a       	sbi	0x0b, 3	; 11
     478:	2f ef       	ldi	r18, 0xFF	; 255
     47a:	85 ea       	ldi	r24, 0xA5	; 165
     47c:	9e e0       	ldi	r25, 0x0E	; 14
     47e:	21 50       	subi	r18, 0x01	; 1
     480:	80 40       	sbci	r24, 0x00	; 0
     482:	90 40       	sbci	r25, 0x00	; 0
     484:	e1 f7       	brne	.-8      	; 0x47e <robo_Honk+0x8>
     486:	00 c0       	rjmp	.+0      	; 0x488 <robo_Honk+0x12>
     488:	00 00       	nop
     48a:	5b 98       	cbi	0x0b, 3	; 11
     48c:	2f ef       	ldi	r18, 0xFF	; 255
     48e:	85 ea       	ldi	r24, 0xA5	; 165
     490:	9e e0       	ldi	r25, 0x0E	; 14
     492:	21 50       	subi	r18, 0x01	; 1
     494:	80 40       	sbci	r24, 0x00	; 0
     496:	90 40       	sbci	r25, 0x00	; 0
     498:	e1 f7       	brne	.-8      	; 0x492 <robo_Honk+0x1c>
     49a:	00 c0       	rjmp	.+0      	; 0x49c <robo_Honk+0x26>
     49c:	00 00       	nop
     49e:	08 95       	ret

000004a0 <robo_checkBattery>:
     4a0:	85 e0       	ldi	r24, 0x05	; 5
     4a2:	0e 94 d7 00 	call	0x1ae	; 0x1ae <ADC_read>
     4a6:	84 3f       	cpi	r24, 0xF4	; 244
     4a8:	91 40       	sbci	r25, 0x01	; 1
     4aa:	10 f4       	brcc	.+4      	; 0x4b0 <robo_checkBattery+0x10>
     4ac:	28 9a       	sbi	0x05, 0	; 5
     4ae:	08 95       	ret
     4b0:	28 98       	cbi	0x05, 0	; 5
     4b2:	08 95       	ret

000004b4 <robo_goPressed>:
     4b4:	89 b1       	in	r24, 0x09	; 9
     4b6:	82 fb       	bst	r24, 2
     4b8:	88 27       	eor	r24, r24
     4ba:	80 f9       	bld	r24, 0
     4bc:	91 e0       	ldi	r25, 0x01	; 1
     4be:	89 27       	eor	r24, r25
     4c0:	08 95       	ret

000004c2 <robo_wait4goPress>:
     4c2:	0e 94 5a 02 	call	0x4b4	; 0x4b4 <robo_goPressed>
     4c6:	88 23       	and	r24, r24
     4c8:	e1 f3       	breq	.-8      	; 0x4c2 <robo_wait4goPress>
     4ca:	08 95       	ret

000004cc <OS_ticks_init>:
     4cc:	f8 94       	cli
     4ce:	85 e0       	ldi	r24, 0x05	; 5
     4d0:	85 bd       	out	0x25, r24	; 37
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	80 93 6e 00 	sts	0x006E, r24	; 0x80006e <__DATA_REGION_ORIGIN__+0xe>
     4d8:	84 e6       	ldi	r24, 0x64	; 100
     4da:	86 bd       	out	0x26, r24	; 38
     4dc:	78 94       	sei
     4de:	08 95       	ret

000004e0 <HAL_init>:
     4e0:	87 e6       	ldi	r24, 0x67	; 103
     4e2:	0e 94 c6 01 	call	0x38c	; 0x38c <USART0_init>
     4e6:	0c 94 d0 00 	jmp	0x1a0	; 0x1a0 <ADC_init>

000004ea <robo_Setup>:
     4ea:	0e 94 70 02 	call	0x4e0	; 0x4e0 <HAL_init>
     4ee:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <motor_init>
     4f2:	53 9a       	sbi	0x0a, 3	; 10
     4f4:	5b 98       	cbi	0x0b, 3	; 11
     4f6:	20 9a       	sbi	0x04, 0	; 4
     4f8:	52 98       	cbi	0x0a, 2	; 10
     4fa:	5a 9a       	sbi	0x0b, 2	; 11
     4fc:	24 98       	cbi	0x04, 4	; 4
     4fe:	23 98       	cbi	0x04, 3	; 4
     500:	85 b1       	in	r24, 0x05	; 5
     502:	88 61       	ori	r24, 0x18	; 24
     504:	85 b9       	out	0x05, r24	; 5
     506:	60 e0       	ldi	r22, 0x00	; 0
     508:	80 e0       	ldi	r24, 0x00	; 0
     50a:	0e 94 43 01 	call	0x286	; 0x286 <motor_set_dir>
     50e:	60 e0       	ldi	r22, 0x00	; 0
     510:	81 e0       	ldi	r24, 0x01	; 1
     512:	0e 94 43 01 	call	0x286	; 0x286 <motor_set_dir>
     516:	70 e0       	ldi	r23, 0x00	; 0
     518:	60 e0       	ldi	r22, 0x00	; 0
     51a:	90 e0       	ldi	r25, 0x00	; 0
     51c:	80 e0       	ldi	r24, 0x00	; 0
     51e:	0c 94 98 01 	jmp	0x330	; 0x330 <robo_motorSpeed>

00000522 <cprintf>:
     522:	4f 92       	push	r4
     524:	5f 92       	push	r5
     526:	6f 92       	push	r6
     528:	7f 92       	push	r7
     52a:	8f 92       	push	r8
     52c:	9f 92       	push	r9
     52e:	af 92       	push	r10
     530:	bf 92       	push	r11
     532:	cf 92       	push	r12
     534:	df 92       	push	r13
     536:	ef 92       	push	r14
     538:	ff 92       	push	r15
     53a:	0f 93       	push	r16
     53c:	1f 93       	push	r17
     53e:	cf 93       	push	r28
     540:	df 93       	push	r29
     542:	cd b7       	in	r28, 0x3d	; 61
     544:	de b7       	in	r29, 0x3e	; 62
     546:	de 01       	movw	r26, r28
     548:	53 96       	adiw	r26, 0x13	; 19
     54a:	ed 91       	ld	r30, X+
     54c:	fd 91       	ld	r31, X+
     54e:	8d 01       	movw	r16, r26
     550:	5a e0       	ldi	r21, 0x0A	; 10
     552:	65 2e       	mov	r6, r21
     554:	71 2c       	mov	r7, r1
     556:	80 81       	ld	r24, Z
     558:	85 32       	cpi	r24, 0x25	; 37
     55a:	81 f4       	brne	.+32     	; 0x57c <cprintf+0x5a>
     55c:	5f 01       	movw	r10, r30
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	a8 0e       	add	r10, r24
     562:	b1 1c       	adc	r11, r1
     564:	81 81       	ldd	r24, Z+1	; 0x01
     566:	84 36       	cpi	r24, 0x64	; 100
     568:	09 f4       	brne	.+2      	; 0x56c <cprintf+0x4a>
     56a:	50 c0       	rjmp	.+160    	; 0x60c <cprintf+0xea>
     56c:	90 f4       	brcc	.+36     	; 0x592 <cprintf+0x70>
     56e:	83 36       	cpi	r24, 0x63	; 99
     570:	61 f4       	brne	.+24     	; 0x58a <cprintf+0x68>
     572:	f8 01       	movw	r30, r16
     574:	80 81       	ld	r24, Z
     576:	0e 5f       	subi	r16, 0xFE	; 254
     578:	1f 4f       	sbci	r17, 0xFF	; 255
     57a:	07 c0       	rjmp	.+14     	; 0x58a <cprintf+0x68>
     57c:	88 23       	and	r24, r24
     57e:	09 f4       	brne	.+2      	; 0x582 <cprintf+0x60>
     580:	5d c0       	rjmp	.+186    	; 0x63c <cprintf+0x11a>
     582:	5f 01       	movw	r10, r30
     584:	9f ef       	ldi	r25, 0xFF	; 255
     586:	a9 1a       	sub	r10, r25
     588:	b9 0a       	sbc	r11, r25
     58a:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <cputchar>
     58e:	f5 01       	movw	r30, r10
     590:	e2 cf       	rjmp	.-60     	; 0x556 <cprintf+0x34>
     592:	83 37       	cpi	r24, 0x73	; 115
     594:	71 f1       	breq	.+92     	; 0x5f2 <cprintf+0xd0>
     596:	30 e1       	ldi	r19, 0x10	; 16
     598:	83 2e       	mov	r8, r19
     59a:	91 2c       	mov	r9, r1
     59c:	e1 2c       	mov	r14, r1
     59e:	40 e1       	ldi	r20, 0x10	; 16
     5a0:	f4 2e       	mov	r15, r20
     5a2:	88 37       	cpi	r24, 0x78	; 120
     5a4:	91 f7       	brne	.-28     	; 0x58a <cprintf+0x68>
     5a6:	f8 01       	movw	r30, r16
     5a8:	c0 80       	ld	r12, Z
     5aa:	d1 80       	ldd	r13, Z+1	; 0x01
     5ac:	0e 5f       	subi	r16, 0xFE	; 254
     5ae:	1f 4f       	sbci	r17, 0xFF	; 255
     5b0:	84 36       	cpi	r24, 0x64	; 100
     5b2:	59 f4       	brne	.+22     	; 0x5ca <cprintf+0xa8>
     5b4:	d7 fe       	sbrs	r13, 7
     5b6:	06 c0       	rjmp	.+12     	; 0x5c4 <cprintf+0xa2>
     5b8:	d1 94       	neg	r13
     5ba:	c1 94       	neg	r12
     5bc:	d1 08       	sbc	r13, r1
     5be:	8d e2       	ldi	r24, 0x2D	; 45
     5c0:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <cputchar>
     5c4:	ce 14       	cp	r12, r14
     5c6:	df 04       	cpc	r13, r15
     5c8:	48 f1       	brcs	.+82     	; 0x61c <cprintf+0xfa>
     5ca:	c6 01       	movw	r24, r12
     5cc:	b7 01       	movw	r22, r14
     5ce:	0e 94 4e 08 	call	0x109c	; 0x109c <__udivmodhi4>
     5d2:	2c 01       	movw	r4, r24
     5d4:	68 5f       	subi	r22, 0xF8	; 248
     5d6:	7d 4f       	sbci	r23, 0xFD	; 253
     5d8:	fb 01       	movw	r30, r22
     5da:	80 81       	ld	r24, Z
     5dc:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <cputchar>
     5e0:	62 01       	movw	r12, r4
     5e2:	c7 01       	movw	r24, r14
     5e4:	b4 01       	movw	r22, r8
     5e6:	0e 94 4e 08 	call	0x109c	; 0x109c <__udivmodhi4>
     5ea:	7b 01       	movw	r14, r22
     5ec:	67 2b       	or	r22, r23
     5ee:	69 f7       	brne	.-38     	; 0x5ca <cprintf+0xa8>
     5f0:	ce cf       	rjmp	.-100    	; 0x58e <cprintf+0x6c>
     5f2:	f8 01       	movw	r30, r16
     5f4:	e0 80       	ld	r14, Z
     5f6:	f1 80       	ldd	r15, Z+1	; 0x01
     5f8:	0e 5f       	subi	r16, 0xFE	; 254
     5fa:	1f 4f       	sbci	r17, 0xFF	; 255
     5fc:	f7 01       	movw	r30, r14
     5fe:	81 91       	ld	r24, Z+
     600:	7f 01       	movw	r14, r30
     602:	88 23       	and	r24, r24
     604:	21 f2       	breq	.-120    	; 0x58e <cprintf+0x6c>
     606:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <cputchar>
     60a:	f8 cf       	rjmp	.-16     	; 0x5fc <cprintf+0xda>
     60c:	9a e0       	ldi	r25, 0x0A	; 10
     60e:	89 2e       	mov	r8, r25
     610:	91 2c       	mov	r9, r1
     612:	20 e1       	ldi	r18, 0x10	; 16
     614:	e2 2e       	mov	r14, r18
     616:	27 e2       	ldi	r18, 0x27	; 39
     618:	f2 2e       	mov	r15, r18
     61a:	c5 cf       	rjmp	.-118    	; 0x5a6 <cprintf+0x84>
     61c:	c7 01       	movw	r24, r14
     61e:	b3 01       	movw	r22, r6
     620:	0e 94 4e 08 	call	0x109c	; 0x109c <__udivmodhi4>
     624:	7b 01       	movw	r14, r22
     626:	62 30       	cpi	r22, 0x02	; 2
     628:	71 05       	cpc	r23, r1
     62a:	60 f6       	brcc	.-104    	; 0x5c4 <cprintf+0xa2>
     62c:	c6 01       	movw	r24, r12
     62e:	0e 94 4e 08 	call	0x109c	; 0x109c <__udivmodhi4>
     632:	fb 01       	movw	r30, r22
     634:	e8 5f       	subi	r30, 0xF8	; 248
     636:	fd 4f       	sbci	r31, 0xFD	; 253
     638:	80 81       	ld	r24, Z
     63a:	a7 cf       	rjmp	.-178    	; 0x58a <cprintf+0x68>
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	80 e0       	ldi	r24, 0x00	; 0
     640:	df 91       	pop	r29
     642:	cf 91       	pop	r28
     644:	1f 91       	pop	r17
     646:	0f 91       	pop	r16
     648:	ff 90       	pop	r15
     64a:	ef 90       	pop	r14
     64c:	df 90       	pop	r13
     64e:	cf 90       	pop	r12
     650:	bf 90       	pop	r11
     652:	af 90       	pop	r10
     654:	9f 90       	pop	r9
     656:	8f 90       	pop	r8
     658:	7f 90       	pop	r7
     65a:	6f 90       	pop	r6
     65c:	5f 90       	pop	r5
     65e:	4f 90       	pop	r4
     660:	08 95       	ret

00000662 <OSStartHighRdy>:
     662:	00 91 28 04 	lds	r16, 0x0428	; 0x800428 <OSRunning>
     666:	03 95       	inc	r16
     668:	00 93 28 04 	sts	0x0428, r16	; 0x800428 <OSRunning>
     66c:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <OSTCBHighRdy>
     670:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <OSTCBHighRdy+0x1>
     674:	c1 91       	ld	r28, Z+
     676:	cd bf       	out	0x3d, r28	; 61
     678:	d1 91       	ld	r29, Z+
     67a:	de bf       	out	0x3e, r29	; 62
     67c:	0f 91       	pop	r16
     67e:	0f bf       	out	0x3f, r16	; 63
     680:	ff 91       	pop	r31
     682:	ef 91       	pop	r30
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	bf 91       	pop	r27
     68a:	af 91       	pop	r26
     68c:	9f 91       	pop	r25
     68e:	8f 91       	pop	r24
     690:	7f 91       	pop	r23
     692:	6f 91       	pop	r22
     694:	5f 91       	pop	r21
     696:	4f 91       	pop	r20
     698:	3f 91       	pop	r19
     69a:	2f 91       	pop	r18
     69c:	1f 91       	pop	r17
     69e:	0f 91       	pop	r16
     6a0:	ff 90       	pop	r15
     6a2:	ef 90       	pop	r14
     6a4:	df 90       	pop	r13
     6a6:	cf 90       	pop	r12
     6a8:	bf 90       	pop	r11
     6aa:	af 90       	pop	r10
     6ac:	9f 90       	pop	r9
     6ae:	8f 90       	pop	r8
     6b0:	7f 90       	pop	r7
     6b2:	6f 90       	pop	r6
     6b4:	5f 90       	pop	r5
     6b6:	4f 90       	pop	r4
     6b8:	3f 90       	pop	r3
     6ba:	2f 90       	pop	r2
     6bc:	1f 90       	pop	r1
     6be:	0f 90       	pop	r0
     6c0:	08 95       	ret

000006c2 <OSCtxSw>:
     6c2:	0f 92       	push	r0
     6c4:	1f 92       	push	r1
     6c6:	2f 92       	push	r2
     6c8:	3f 92       	push	r3
     6ca:	4f 92       	push	r4
     6cc:	5f 92       	push	r5
     6ce:	6f 92       	push	r6
     6d0:	7f 92       	push	r7
     6d2:	8f 92       	push	r8
     6d4:	9f 92       	push	r9
     6d6:	af 92       	push	r10
     6d8:	bf 92       	push	r11
     6da:	cf 92       	push	r12
     6dc:	df 92       	push	r13
     6de:	ef 92       	push	r14
     6e0:	ff 92       	push	r15
     6e2:	0f 93       	push	r16
     6e4:	1f 93       	push	r17
     6e6:	2f 93       	push	r18
     6e8:	3f 93       	push	r19
     6ea:	4f 93       	push	r20
     6ec:	5f 93       	push	r21
     6ee:	6f 93       	push	r22
     6f0:	7f 93       	push	r23
     6f2:	8f 93       	push	r24
     6f4:	9f 93       	push	r25
     6f6:	af 93       	push	r26
     6f8:	bf 93       	push	r27
     6fa:	cf 93       	push	r28
     6fc:	df 93       	push	r29
     6fe:	ef 93       	push	r30
     700:	ff 93       	push	r31
     702:	0f b7       	in	r16, 0x3f	; 63
     704:	0f 93       	push	r16
     706:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     70a:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     70e:	cd b7       	in	r28, 0x3d	; 61
     710:	c1 93       	st	Z+, r28
     712:	de b7       	in	r29, 0x3e	; 62
     714:	d1 93       	st	Z+, r29
     716:	00 91 2d 04 	lds	r16, 0x042D	; 0x80042d <OSPrioHighRdy>
     71a:	00 93 2e 04 	sts	0x042E, r16	; 0x80042e <OSPrioCur>
     71e:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <OSTCBHighRdy>
     722:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <OSTCBHighRdy+0x1>
     726:	e0 93 40 04 	sts	0x0440, r30	; 0x800440 <OSTCBCur>
     72a:	f0 93 41 04 	sts	0x0441, r31	; 0x800441 <OSTCBCur+0x1>
     72e:	c1 91       	ld	r28, Z+
     730:	cd bf       	out	0x3d, r28	; 61
     732:	d1 91       	ld	r29, Z+
     734:	de bf       	out	0x3e, r29	; 62
     736:	0f 91       	pop	r16
     738:	0f bf       	out	0x3f, r16	; 63
     73a:	ff 91       	pop	r31
     73c:	ef 91       	pop	r30
     73e:	df 91       	pop	r29
     740:	cf 91       	pop	r28
     742:	bf 91       	pop	r27
     744:	af 91       	pop	r26
     746:	9f 91       	pop	r25
     748:	8f 91       	pop	r24
     74a:	7f 91       	pop	r23
     74c:	6f 91       	pop	r22
     74e:	5f 91       	pop	r21
     750:	4f 91       	pop	r20
     752:	3f 91       	pop	r19
     754:	2f 91       	pop	r18
     756:	1f 91       	pop	r17
     758:	0f 91       	pop	r16
     75a:	ff 90       	pop	r15
     75c:	ef 90       	pop	r14
     75e:	df 90       	pop	r13
     760:	cf 90       	pop	r12
     762:	bf 90       	pop	r11
     764:	af 90       	pop	r10
     766:	9f 90       	pop	r9
     768:	8f 90       	pop	r8
     76a:	7f 90       	pop	r7
     76c:	6f 90       	pop	r6
     76e:	5f 90       	pop	r5
     770:	4f 90       	pop	r4
     772:	3f 90       	pop	r3
     774:	2f 90       	pop	r2
     776:	1f 90       	pop	r1
     778:	0f 90       	pop	r0
     77a:	08 95       	ret

0000077c <OSIntCtxSw>:
     77c:	00 91 2d 04 	lds	r16, 0x042D	; 0x80042d <OSPrioHighRdy>
     780:	00 93 2e 04 	sts	0x042E, r16	; 0x80042e <OSPrioCur>
     784:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <OSTCBHighRdy>
     788:	f0 91 39 04 	lds	r31, 0x0439	; 0x800439 <OSTCBHighRdy+0x1>
     78c:	e0 93 40 04 	sts	0x0440, r30	; 0x800440 <OSTCBCur>
     790:	f0 93 41 04 	sts	0x0441, r31	; 0x800441 <OSTCBCur+0x1>
     794:	c1 91       	ld	r28, Z+
     796:	cd bf       	out	0x3d, r28	; 61
     798:	d1 91       	ld	r29, Z+
     79a:	de bf       	out	0x3e, r29	; 62
     79c:	0f 91       	pop	r16
     79e:	0f bf       	out	0x3f, r16	; 63
     7a0:	ff 91       	pop	r31
     7a2:	ef 91       	pop	r30
     7a4:	df 91       	pop	r29
     7a6:	cf 91       	pop	r28
     7a8:	bf 91       	pop	r27
     7aa:	af 91       	pop	r26
     7ac:	9f 91       	pop	r25
     7ae:	8f 91       	pop	r24
     7b0:	7f 91       	pop	r23
     7b2:	6f 91       	pop	r22
     7b4:	5f 91       	pop	r21
     7b6:	4f 91       	pop	r20
     7b8:	3f 91       	pop	r19
     7ba:	2f 91       	pop	r18
     7bc:	1f 91       	pop	r17
     7be:	0f 91       	pop	r16
     7c0:	ff 90       	pop	r15
     7c2:	ef 90       	pop	r14
     7c4:	df 90       	pop	r13
     7c6:	cf 90       	pop	r12
     7c8:	bf 90       	pop	r11
     7ca:	af 90       	pop	r10
     7cc:	9f 90       	pop	r9
     7ce:	8f 90       	pop	r8
     7d0:	7f 90       	pop	r7
     7d2:	6f 90       	pop	r6
     7d4:	5f 90       	pop	r5
     7d6:	4f 90       	pop	r4
     7d8:	3f 90       	pop	r3
     7da:	2f 90       	pop	r2
     7dc:	1f 90       	pop	r1
     7de:	0f 90       	pop	r0
     7e0:	08 95       	ret

000007e2 <OSTickISR>:
     7e2:	0f 92       	push	r0
     7e4:	1f 92       	push	r1
     7e6:	2f 92       	push	r2
     7e8:	3f 92       	push	r3
     7ea:	4f 92       	push	r4
     7ec:	5f 92       	push	r5
     7ee:	6f 92       	push	r6
     7f0:	7f 92       	push	r7
     7f2:	8f 92       	push	r8
     7f4:	9f 92       	push	r9
     7f6:	af 92       	push	r10
     7f8:	bf 92       	push	r11
     7fa:	cf 92       	push	r12
     7fc:	df 92       	push	r13
     7fe:	ef 92       	push	r14
     800:	ff 92       	push	r15
     802:	0f 93       	push	r16
     804:	1f 93       	push	r17
     806:	2f 93       	push	r18
     808:	3f 93       	push	r19
     80a:	4f 93       	push	r20
     80c:	5f 93       	push	r21
     80e:	6f 93       	push	r22
     810:	7f 93       	push	r23
     812:	8f 93       	push	r24
     814:	9f 93       	push	r25
     816:	af 93       	push	r26
     818:	bf 93       	push	r27
     81a:	cf 93       	push	r28
     81c:	df 93       	push	r29
     81e:	ef 93       	push	r30
     820:	ff 93       	push	r31
     822:	0f b7       	in	r16, 0x3f	; 63
     824:	00 68       	ori	r16, 0x80	; 128
     826:	0f 93       	push	r16
     828:	00 91 3f 04 	lds	r16, 0x043F	; 0x80043f <OSIntNesting>
     82c:	03 95       	inc	r16
     82e:	00 93 3f 04 	sts	0x043F, r16	; 0x80043f <OSIntNesting>
     832:	01 30       	cpi	r16, 0x01	; 1
     834:	41 f4       	brne	.+16     	; 0x846 <_not_first_int>
     836:	cd b7       	in	r28, 0x3d	; 61
     838:	de b7       	in	r29, 0x3e	; 62
     83a:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     83e:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     842:	c1 93       	st	Z+, r28
     844:	d1 93       	st	Z+, r29

00000846 <_not_first_int>:
     846:	04 e6       	ldi	r16, 0x64	; 100
     848:	06 bd       	out	0x26, r16	; 38
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	1f 2e       	mov	r1, r31
     84e:	78 94       	sei
     850:	0e 94 54 05 	call	0xaa8	; 0xaa8 <OSTimeTick>
     854:	00 00       	nop
     856:	0e 94 c7 04 	call	0x98e	; 0x98e <OSIntExit>
     85a:	0f 91       	pop	r16
     85c:	0f bf       	out	0x3f, r16	; 63
     85e:	ff 91       	pop	r31
     860:	ef 91       	pop	r30
     862:	df 91       	pop	r29
     864:	cf 91       	pop	r28
     866:	bf 91       	pop	r27
     868:	af 91       	pop	r26
     86a:	9f 91       	pop	r25
     86c:	8f 91       	pop	r24
     86e:	7f 91       	pop	r23
     870:	6f 91       	pop	r22
     872:	5f 91       	pop	r21
     874:	4f 91       	pop	r20
     876:	3f 91       	pop	r19
     878:	2f 91       	pop	r18
     87a:	1f 91       	pop	r17
     87c:	0f 91       	pop	r16
     87e:	ff 90       	pop	r15
     880:	ef 90       	pop	r14
     882:	df 90       	pop	r13
     884:	cf 90       	pop	r12
     886:	bf 90       	pop	r11
     888:	af 90       	pop	r10
     88a:	9f 90       	pop	r9
     88c:	8f 90       	pop	r8
     88e:	7f 90       	pop	r7
     890:	6f 90       	pop	r6
     892:	5f 90       	pop	r5
     894:	4f 90       	pop	r4
     896:	3f 90       	pop	r3
     898:	2f 90       	pop	r2
     89a:	1f 90       	pop	r1
     89c:	0f 90       	pop	r0
     89e:	08 95       	ret

000008a0 <OSTaskStkInit>:
     8a0:	fa 01       	movw	r30, r20
     8a2:	80 83       	st	Z, r24
     8a4:	31 97       	sbiw	r30, 0x01	; 1
     8a6:	90 83       	st	Z, r25
     8a8:	31 97       	sbiw	r30, 0x01	; 1
     8aa:	10 82       	st	Z, r1
     8ac:	31 97       	sbiw	r30, 0x01	; 1
     8ae:	10 82       	st	Z, r1
     8b0:	31 97       	sbiw	r30, 0x01	; 1
     8b2:	10 82       	st	Z, r1
     8b4:	31 97       	sbiw	r30, 0x01	; 1
     8b6:	10 82       	st	Z, r1
     8b8:	31 97       	sbiw	r30, 0x01	; 1
     8ba:	10 82       	st	Z, r1
     8bc:	31 97       	sbiw	r30, 0x01	; 1
     8be:	10 82       	st	Z, r1
     8c0:	31 97       	sbiw	r30, 0x01	; 1
     8c2:	10 82       	st	Z, r1
     8c4:	31 97       	sbiw	r30, 0x01	; 1
     8c6:	10 82       	st	Z, r1
     8c8:	31 97       	sbiw	r30, 0x01	; 1
     8ca:	10 82       	st	Z, r1
     8cc:	31 97       	sbiw	r30, 0x01	; 1
     8ce:	10 82       	st	Z, r1
     8d0:	31 97       	sbiw	r30, 0x01	; 1
     8d2:	10 82       	st	Z, r1
     8d4:	31 97       	sbiw	r30, 0x01	; 1
     8d6:	10 82       	st	Z, r1
     8d8:	31 97       	sbiw	r30, 0x01	; 1
     8da:	10 82       	st	Z, r1
     8dc:	31 97       	sbiw	r30, 0x01	; 1
     8de:	10 82       	st	Z, r1
     8e0:	31 97       	sbiw	r30, 0x01	; 1
     8e2:	10 82       	st	Z, r1
     8e4:	31 97       	sbiw	r30, 0x01	; 1
     8e6:	10 82       	st	Z, r1
     8e8:	31 97       	sbiw	r30, 0x01	; 1
     8ea:	10 82       	st	Z, r1
     8ec:	31 97       	sbiw	r30, 0x01	; 1
     8ee:	10 82       	st	Z, r1
     8f0:	31 97       	sbiw	r30, 0x01	; 1
     8f2:	10 82       	st	Z, r1
     8f4:	31 97       	sbiw	r30, 0x01	; 1
     8f6:	10 82       	st	Z, r1
     8f8:	31 97       	sbiw	r30, 0x01	; 1
     8fa:	10 82       	st	Z, r1
     8fc:	31 97       	sbiw	r30, 0x01	; 1
     8fe:	10 82       	st	Z, r1
     900:	31 97       	sbiw	r30, 0x01	; 1
     902:	10 82       	st	Z, r1
     904:	31 97       	sbiw	r30, 0x01	; 1
     906:	10 82       	st	Z, r1
     908:	31 97       	sbiw	r30, 0x01	; 1
     90a:	60 83       	st	Z, r22
     90c:	31 97       	sbiw	r30, 0x01	; 1
     90e:	70 83       	st	Z, r23
     910:	31 97       	sbiw	r30, 0x01	; 1
     912:	10 82       	st	Z, r1
     914:	31 97       	sbiw	r30, 0x01	; 1
     916:	10 82       	st	Z, r1
     918:	31 97       	sbiw	r30, 0x01	; 1
     91a:	10 82       	st	Z, r1
     91c:	31 97       	sbiw	r30, 0x01	; 1
     91e:	10 82       	st	Z, r1
     920:	31 97       	sbiw	r30, 0x01	; 1
     922:	10 82       	st	Z, r1
     924:	31 97       	sbiw	r30, 0x01	; 1
     926:	10 82       	st	Z, r1
     928:	31 97       	sbiw	r30, 0x01	; 1
     92a:	80 e8       	ldi	r24, 0x80	; 128
     92c:	80 83       	st	Z, r24
     92e:	ca 01       	movw	r24, r20
     930:	83 97       	sbiw	r24, 0x23	; 35
     932:	08 95       	ret

00000934 <OSTaskCreateHook>:
     934:	08 95       	ret

00000936 <OSTaskDelHook>:
     936:	08 95       	ret

00000938 <OSTaskSwHook>:
     938:	08 95       	ret

0000093a <OSTaskStatHook>:
     93a:	08 95       	ret

0000093c <OSTimeTickHook>:
     93c:	08 95       	ret

0000093e <OSInitHookBegin>:
     93e:	08 95       	ret

00000940 <OSInitHookEnd>:
     940:	08 95       	ret

00000942 <OSTaskIdleHook>:
     942:	08 95       	ret

00000944 <OSTCBInitHook>:
     944:	08 95       	ret

00000946 <OS_TaskIdle>:
     946:	f8 94       	cli
     948:	80 91 29 04 	lds	r24, 0x0429	; 0x800429 <OSIdleCtr>
     94c:	90 91 2a 04 	lds	r25, 0x042A	; 0x80042a <OSIdleCtr+0x1>
     950:	a0 91 2b 04 	lds	r26, 0x042B	; 0x80042b <OSIdleCtr+0x2>
     954:	b0 91 2c 04 	lds	r27, 0x042C	; 0x80042c <OSIdleCtr+0x3>
     958:	01 96       	adiw	r24, 0x01	; 1
     95a:	a1 1d       	adc	r26, r1
     95c:	b1 1d       	adc	r27, r1
     95e:	80 93 29 04 	sts	0x0429, r24	; 0x800429 <OSIdleCtr>
     962:	90 93 2a 04 	sts	0x042A, r25	; 0x80042a <OSIdleCtr+0x1>
     966:	a0 93 2b 04 	sts	0x042B, r26	; 0x80042b <OSIdleCtr+0x2>
     96a:	b0 93 2c 04 	sts	0x042C, r27	; 0x80042c <OSIdleCtr+0x3>
     96e:	78 94       	sei
     970:	0e 94 a1 04 	call	0x942	; 0x942 <OSTaskIdleHook>
     974:	e8 cf       	rjmp	.-48     	; 0x946 <OS_TaskIdle>

00000976 <OSIntEnter>:
     976:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     97a:	81 30       	cpi	r24, 0x01	; 1
     97c:	39 f4       	brne	.+14     	; 0x98c <OSIntEnter+0x16>
     97e:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     982:	8f 3f       	cpi	r24, 0xFF	; 255
     984:	19 f0       	breq	.+6      	; 0x98c <OSIntEnter+0x16>
     986:	8f 5f       	subi	r24, 0xFF	; 255
     988:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <OSIntNesting>
     98c:	08 95       	ret

0000098e <OSIntExit>:
     98e:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     992:	81 30       	cpi	r24, 0x01	; 1
     994:	09 f0       	breq	.+2      	; 0x998 <OSIntExit+0xa>
     996:	4c c0       	rjmp	.+152    	; 0xa30 <OSIntExit+0xa2>
     998:	f8 94       	cli
     99a:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     99e:	88 23       	and	r24, r24
     9a0:	19 f0       	breq	.+6      	; 0x9a8 <OSIntExit+0x1a>
     9a2:	81 50       	subi	r24, 0x01	; 1
     9a4:	80 93 3f 04 	sts	0x043F, r24	; 0x80043f <OSIntNesting>
     9a8:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     9ac:	81 11       	cpse	r24, r1
     9ae:	3f c0       	rjmp	.+126    	; 0xa2e <OSIntExit+0xa0>
     9b0:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     9b4:	81 11       	cpse	r24, r1
     9b6:	3b c0       	rjmp	.+118    	; 0xa2e <OSIntExit+0xa0>
     9b8:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <OSRdyGrp>
     9bc:	f0 e0       	ldi	r31, 0x00	; 0
     9be:	e0 50       	subi	r30, 0x00	; 0
     9c0:	ff 4f       	sbci	r31, 0xFF	; 255
     9c2:	e0 81       	ld	r30, Z
     9c4:	e0 93 3e 04 	sts	0x043E, r30	; 0x80043e <OSIntExitY>
     9c8:	ae 2f       	mov	r26, r30
     9ca:	b0 e0       	ldi	r27, 0x00	; 0
     9cc:	a5 5c       	subi	r26, 0xC5	; 197
     9ce:	bb 4f       	sbci	r27, 0xFB	; 251
     9d0:	ac 91       	ld	r26, X
     9d2:	b0 e0       	ldi	r27, 0x00	; 0
     9d4:	a0 50       	subi	r26, 0x00	; 0
     9d6:	bf 4f       	sbci	r27, 0xFF	; 255
     9d8:	ee 0f       	add	r30, r30
     9da:	ee 0f       	add	r30, r30
     9dc:	ee 0f       	add	r30, r30
     9de:	8c 91       	ld	r24, X
     9e0:	e8 0f       	add	r30, r24
     9e2:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <OSPrioHighRdy>
     9e6:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <OSPrioCur>
     9ea:	e8 17       	cp	r30, r24
     9ec:	01 f1       	breq	.+64     	; 0xa2e <OSIntExit+0xa0>
     9ee:	f0 e0       	ldi	r31, 0x00	; 0
     9f0:	ee 0f       	add	r30, r30
     9f2:	ff 1f       	adc	r31, r31
     9f4:	ef 57       	subi	r30, 0x7F	; 127
     9f6:	fa 4f       	sbci	r31, 0xFA	; 250
     9f8:	80 81       	ld	r24, Z
     9fa:	91 81       	ldd	r25, Z+1	; 0x01
     9fc:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <OSTCBHighRdy+0x1>
     a00:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <OSTCBHighRdy>
     a04:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <OSCtxSwCtr>
     a08:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <OSCtxSwCtr+0x1>
     a0c:	a0 91 33 04 	lds	r26, 0x0433	; 0x800433 <OSCtxSwCtr+0x2>
     a10:	b0 91 34 04 	lds	r27, 0x0434	; 0x800434 <OSCtxSwCtr+0x3>
     a14:	01 96       	adiw	r24, 0x01	; 1
     a16:	a1 1d       	adc	r26, r1
     a18:	b1 1d       	adc	r27, r1
     a1a:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <OSCtxSwCtr>
     a1e:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <OSCtxSwCtr+0x1>
     a22:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <OSCtxSwCtr+0x2>
     a26:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <OSCtxSwCtr+0x3>
     a2a:	0e 94 be 03 	call	0x77c	; 0x77c <OSIntCtxSw>
     a2e:	78 94       	sei
     a30:	08 95       	ret

00000a32 <OSSchedLock>:
     a32:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     a36:	81 30       	cpi	r24, 0x01	; 1
     a38:	49 f4       	brne	.+18     	; 0xa4c <OSSchedLock+0x1a>
     a3a:	f8 94       	cli
     a3c:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     a40:	8f 3f       	cpi	r24, 0xFF	; 255
     a42:	19 f0       	breq	.+6      	; 0xa4a <OSSchedLock+0x18>
     a44:	8f 5f       	subi	r24, 0xFF	; 255
     a46:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     a4a:	78 94       	sei
     a4c:	08 95       	ret

00000a4e <OSStart>:
     a4e:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     a52:	81 11       	cpse	r24, r1
     a54:	28 c0       	rjmp	.+80     	; 0xaa6 <OSStart+0x58>
     a56:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <OSRdyGrp>
     a5a:	f0 e0       	ldi	r31, 0x00	; 0
     a5c:	e0 50       	subi	r30, 0x00	; 0
     a5e:	ff 4f       	sbci	r31, 0xFF	; 255
     a60:	e0 81       	ld	r30, Z
     a62:	ae 2f       	mov	r26, r30
     a64:	b0 e0       	ldi	r27, 0x00	; 0
     a66:	a5 5c       	subi	r26, 0xC5	; 197
     a68:	bb 4f       	sbci	r27, 0xFB	; 251
     a6a:	ac 91       	ld	r26, X
     a6c:	b0 e0       	ldi	r27, 0x00	; 0
     a6e:	a0 50       	subi	r26, 0x00	; 0
     a70:	bf 4f       	sbci	r27, 0xFF	; 255
     a72:	ee 0f       	add	r30, r30
     a74:	ee 0f       	add	r30, r30
     a76:	ee 0f       	add	r30, r30
     a78:	8c 91       	ld	r24, X
     a7a:	e8 0f       	add	r30, r24
     a7c:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <OSPrioHighRdy>
     a80:	e0 93 2e 04 	sts	0x042E, r30	; 0x80042e <OSPrioCur>
     a84:	f0 e0       	ldi	r31, 0x00	; 0
     a86:	ee 0f       	add	r30, r30
     a88:	ff 1f       	adc	r31, r31
     a8a:	ef 57       	subi	r30, 0x7F	; 127
     a8c:	fa 4f       	sbci	r31, 0xFA	; 250
     a8e:	80 81       	ld	r24, Z
     a90:	91 81       	ldd	r25, Z+1	; 0x01
     a92:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <OSTCBHighRdy+0x1>
     a96:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <OSTCBHighRdy>
     a9a:	90 93 41 04 	sts	0x0441, r25	; 0x800441 <OSTCBCur+0x1>
     a9e:	80 93 40 04 	sts	0x0440, r24	; 0x800440 <OSTCBCur>
     aa2:	0c 94 31 03 	jmp	0x662	; 0x662 <OSStartHighRdy>
     aa6:	08 95       	ret

00000aa8 <OSTimeTick>:
     aa8:	0e 94 9e 04 	call	0x93c	; 0x93c <OSTimeTickHook>
     aac:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     ab0:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <OSTCBList>
     ab4:	f0 91 30 04 	lds	r31, 0x0430	; 0x800430 <OSTCBList+0x1>
     ab8:	21 e0       	ldi	r18, 0x01	; 1
     aba:	30 e0       	ldi	r19, 0x00	; 0
     abc:	81 30       	cpi	r24, 0x01	; 1
     abe:	01 f1       	breq	.+64     	; 0xb00 <OSTimeTick+0x58>
     ac0:	08 95       	ret
     ac2:	f8 94       	cli
     ac4:	86 81       	ldd	r24, Z+6	; 0x06
     ac6:	97 81       	ldd	r25, Z+7	; 0x07
     ac8:	00 97       	sbiw	r24, 0x00	; 0
     aca:	b1 f0       	breq	.+44     	; 0xaf8 <OSTimeTick+0x50>
     acc:	01 97       	sbiw	r24, 0x01	; 1
     ace:	97 83       	std	Z+7, r25	; 0x07
     ad0:	86 83       	std	Z+6, r24	; 0x06
     ad2:	89 2b       	or	r24, r25
     ad4:	89 f4       	brne	.+34     	; 0xaf8 <OSTimeTick+0x50>
     ad6:	80 85       	ldd	r24, Z+8	; 0x08
     ad8:	83 fd       	sbrc	r24, 3
     ada:	16 c0       	rjmp	.+44     	; 0xb08 <OSTimeTick+0x60>
     adc:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <OSRdyGrp>
     ae0:	95 85       	ldd	r25, Z+13	; 0x0d
     ae2:	89 2b       	or	r24, r25
     ae4:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <OSRdyGrp>
     ae8:	a3 85       	ldd	r26, Z+11	; 0x0b
     aea:	b0 e0       	ldi	r27, 0x00	; 0
     aec:	a5 5c       	subi	r26, 0xC5	; 197
     aee:	bb 4f       	sbci	r27, 0xFB	; 251
     af0:	8c 91       	ld	r24, X
     af2:	94 85       	ldd	r25, Z+12	; 0x0c
     af4:	89 2b       	or	r24, r25
     af6:	8c 93       	st	X, r24
     af8:	02 80       	ldd	r0, Z+2	; 0x02
     afa:	f3 81       	ldd	r31, Z+3	; 0x03
     afc:	e0 2d       	mov	r30, r0
     afe:	78 94       	sei
     b00:	81 85       	ldd	r24, Z+9	; 0x09
     b02:	80 31       	cpi	r24, 0x10	; 16
     b04:	f1 f6       	brne	.-68     	; 0xac2 <OSTimeTick+0x1a>
     b06:	dc cf       	rjmp	.-72     	; 0xac0 <OSTimeTick+0x18>
     b08:	37 83       	std	Z+7, r19	; 0x07
     b0a:	26 83       	std	Z+6, r18	; 0x06
     b0c:	f5 cf       	rjmp	.-22     	; 0xaf8 <OSTimeTick+0x50>

00000b0e <OSVersion>:
     b0e:	8c ef       	ldi	r24, 0xFC	; 252
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	08 95       	ret

00000b14 <OS_Dummy>:
     b14:	08 95       	ret

00000b16 <OS_Sched>:
     b16:	f8 94       	cli
     b18:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     b1c:	81 11       	cpse	r24, r1
     b1e:	3d c0       	rjmp	.+122    	; 0xb9a <OS_Sched+0x84>
     b20:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     b24:	81 11       	cpse	r24, r1
     b26:	39 c0       	rjmp	.+114    	; 0xb9a <OS_Sched+0x84>
     b28:	e0 91 3a 04 	lds	r30, 0x043A	; 0x80043a <OSRdyGrp>
     b2c:	f0 e0       	ldi	r31, 0x00	; 0
     b2e:	e0 50       	subi	r30, 0x00	; 0
     b30:	ff 4f       	sbci	r31, 0xFF	; 255
     b32:	e0 81       	ld	r30, Z
     b34:	ae 2f       	mov	r26, r30
     b36:	b0 e0       	ldi	r27, 0x00	; 0
     b38:	a5 5c       	subi	r26, 0xC5	; 197
     b3a:	bb 4f       	sbci	r27, 0xFB	; 251
     b3c:	ac 91       	ld	r26, X
     b3e:	b0 e0       	ldi	r27, 0x00	; 0
     b40:	a0 50       	subi	r26, 0x00	; 0
     b42:	bf 4f       	sbci	r27, 0xFF	; 255
     b44:	ee 0f       	add	r30, r30
     b46:	ee 0f       	add	r30, r30
     b48:	ee 0f       	add	r30, r30
     b4a:	8c 91       	ld	r24, X
     b4c:	e8 0f       	add	r30, r24
     b4e:	e0 93 2d 04 	sts	0x042D, r30	; 0x80042d <OSPrioHighRdy>
     b52:	80 91 2e 04 	lds	r24, 0x042E	; 0x80042e <OSPrioCur>
     b56:	e8 17       	cp	r30, r24
     b58:	01 f1       	breq	.+64     	; 0xb9a <OS_Sched+0x84>
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	ee 0f       	add	r30, r30
     b5e:	ff 1f       	adc	r31, r31
     b60:	ef 57       	subi	r30, 0x7F	; 127
     b62:	fa 4f       	sbci	r31, 0xFA	; 250
     b64:	80 81       	ld	r24, Z
     b66:	91 81       	ldd	r25, Z+1	; 0x01
     b68:	90 93 39 04 	sts	0x0439, r25	; 0x800439 <OSTCBHighRdy+0x1>
     b6c:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <OSTCBHighRdy>
     b70:	80 91 31 04 	lds	r24, 0x0431	; 0x800431 <OSCtxSwCtr>
     b74:	90 91 32 04 	lds	r25, 0x0432	; 0x800432 <OSCtxSwCtr+0x1>
     b78:	a0 91 33 04 	lds	r26, 0x0433	; 0x800433 <OSCtxSwCtr+0x2>
     b7c:	b0 91 34 04 	lds	r27, 0x0434	; 0x800434 <OSCtxSwCtr+0x3>
     b80:	01 96       	adiw	r24, 0x01	; 1
     b82:	a1 1d       	adc	r26, r1
     b84:	b1 1d       	adc	r27, r1
     b86:	80 93 31 04 	sts	0x0431, r24	; 0x800431 <OSCtxSwCtr>
     b8a:	90 93 32 04 	sts	0x0432, r25	; 0x800432 <OSCtxSwCtr+0x1>
     b8e:	a0 93 33 04 	sts	0x0433, r26	; 0x800433 <OSCtxSwCtr+0x2>
     b92:	b0 93 34 04 	sts	0x0434, r27	; 0x800434 <OSCtxSwCtr+0x3>
     b96:	0e 94 61 03 	call	0x6c2	; 0x6c2 <OSCtxSw>
     b9a:	78 94       	sei
     b9c:	08 95       	ret

00000b9e <OSSchedUnlock>:
     b9e:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     ba2:	81 30       	cpi	r24, 0x01	; 1
     ba4:	91 f4       	brne	.+36     	; 0xbca <OSSchedUnlock+0x2c>
     ba6:	f8 94       	cli
     ba8:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     bac:	88 23       	and	r24, r24
     bae:	61 f0       	breq	.+24     	; 0xbc8 <OSSchedUnlock+0x2a>
     bb0:	81 50       	subi	r24, 0x01	; 1
     bb2:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     bb6:	81 11       	cpse	r24, r1
     bb8:	07 c0       	rjmp	.+14     	; 0xbc8 <OSSchedUnlock+0x2a>
     bba:	80 91 3f 04 	lds	r24, 0x043F	; 0x80043f <OSIntNesting>
     bbe:	81 11       	cpse	r24, r1
     bc0:	03 c0       	rjmp	.+6      	; 0xbc8 <OSSchedUnlock+0x2a>
     bc2:	78 94       	sei
     bc4:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <OS_Sched>
     bc8:	78 94       	sei
     bca:	08 95       	ret

00000bcc <OSTimeDly.part.0>:
     bcc:	ac 01       	movw	r20, r24
     bce:	f8 94       	cli
     bd0:	a0 91 40 04 	lds	r26, 0x0440	; 0x800440 <OSTCBCur>
     bd4:	b0 91 41 04 	lds	r27, 0x0441	; 0x800441 <OSTCBCur+0x1>
     bd8:	1b 96       	adiw	r26, 0x0b	; 11
     bda:	ec 91       	ld	r30, X
     bdc:	1b 97       	sbiw	r26, 0x0b	; 11
     bde:	f0 e0       	ldi	r31, 0x00	; 0
     be0:	1c 96       	adiw	r26, 0x0c	; 12
     be2:	9c 91       	ld	r25, X
     be4:	1c 97       	sbiw	r26, 0x0c	; 12
     be6:	90 95       	com	r25
     be8:	e5 5c       	subi	r30, 0xC5	; 197
     bea:	fb 4f       	sbci	r31, 0xFB	; 251
     bec:	80 81       	ld	r24, Z
     bee:	98 23       	and	r25, r24
     bf0:	90 83       	st	Z, r25
     bf2:	91 11       	cpse	r25, r1
     bf4:	0a c0       	rjmp	.+20     	; 0xc0a <OSTimeDly.part.0+0x3e>
     bf6:	1d 96       	adiw	r26, 0x0d	; 13
     bf8:	9c 91       	ld	r25, X
     bfa:	1d 97       	sbiw	r26, 0x0d	; 13
     bfc:	29 2f       	mov	r18, r25
     bfe:	20 95       	com	r18
     c00:	90 91 3a 04 	lds	r25, 0x043A	; 0x80043a <OSRdyGrp>
     c04:	92 23       	and	r25, r18
     c06:	90 93 3a 04 	sts	0x043A, r25	; 0x80043a <OSRdyGrp>
     c0a:	17 96       	adiw	r26, 0x07	; 7
     c0c:	5c 93       	st	X, r21
     c0e:	4e 93       	st	-X, r20
     c10:	16 97       	sbiw	r26, 0x06	; 6
     c12:	78 94       	sei
     c14:	0c 94 8b 05 	jmp	0xb16	; 0xb16 <OS_Sched>

00000c18 <OS_TCBInit>:
     c18:	1f 93       	push	r17
     c1a:	cf 93       	push	r28
     c1c:	df 93       	push	r29
     c1e:	f8 94       	cli
     c20:	c0 91 35 04 	lds	r28, 0x0435	; 0x800435 <OSTCBFreeList>
     c24:	d0 91 36 04 	lds	r29, 0x0436	; 0x800436 <OSTCBFreeList+0x1>
     c28:	20 97       	sbiw	r28, 0x00	; 0
     c2a:	09 f4       	brne	.+2      	; 0xc2e <OS_TCBInit+0x16>
     c2c:	54 c0       	rjmp	.+168    	; 0xcd6 <OS_TCBInit+0xbe>
     c2e:	18 2f       	mov	r17, r24
     c30:	8a 81       	ldd	r24, Y+2	; 0x02
     c32:	9b 81       	ldd	r25, Y+3	; 0x03
     c34:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <OSTCBFreeList+0x1>
     c38:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <OSTCBFreeList>
     c3c:	78 94       	sei
     c3e:	79 83       	std	Y+1, r23	; 0x01
     c40:	68 83       	st	Y, r22
     c42:	19 87       	std	Y+9, r17	; 0x09
     c44:	18 86       	std	Y+8, r1	; 0x08
     c46:	1f 82       	std	Y+7, r1	; 0x07
     c48:	1e 82       	std	Y+6, r1	; 0x06
     c4a:	1e 86       	std	Y+14, r1	; 0x0e
     c4c:	e1 2f       	mov	r30, r17
     c4e:	e6 95       	lsr	r30
     c50:	e6 95       	lsr	r30
     c52:	e6 95       	lsr	r30
     c54:	eb 87       	std	Y+11, r30	; 0x0b
     c56:	f0 e0       	ldi	r31, 0x00	; 0
     c58:	e0 50       	subi	r30, 0x00	; 0
     c5a:	fe 4f       	sbci	r31, 0xFE	; 254
     c5c:	80 81       	ld	r24, Z
     c5e:	8d 87       	std	Y+13, r24	; 0x0d
     c60:	e1 2f       	mov	r30, r17
     c62:	e7 70       	andi	r30, 0x07	; 7
     c64:	ea 87       	std	Y+10, r30	; 0x0a
     c66:	f0 e0       	ldi	r31, 0x00	; 0
     c68:	e0 50       	subi	r30, 0x00	; 0
     c6a:	fe 4f       	sbci	r31, 0xFE	; 254
     c6c:	80 81       	ld	r24, Z
     c6e:	8c 87       	std	Y+12, r24	; 0x0c
     c70:	ce 01       	movw	r24, r28
     c72:	0e 94 a2 04 	call	0x944	; 0x944 <OSTCBInitHook>
     c76:	ce 01       	movw	r24, r28
     c78:	0e 94 9a 04 	call	0x934	; 0x934 <OSTaskCreateHook>
     c7c:	f8 94       	cli
     c7e:	e1 2f       	mov	r30, r17
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	ee 0f       	add	r30, r30
     c84:	ff 1f       	adc	r31, r31
     c86:	ef 57       	subi	r30, 0x7F	; 127
     c88:	fa 4f       	sbci	r31, 0xFA	; 250
     c8a:	d1 83       	std	Z+1, r29	; 0x01
     c8c:	c0 83       	st	Z, r28
     c8e:	e0 91 2f 04 	lds	r30, 0x042F	; 0x80042f <OSTCBList>
     c92:	f0 91 30 04 	lds	r31, 0x0430	; 0x800430 <OSTCBList+0x1>
     c96:	fb 83       	std	Y+3, r31	; 0x03
     c98:	ea 83       	std	Y+2, r30	; 0x02
     c9a:	1d 82       	std	Y+5, r1	; 0x05
     c9c:	1c 82       	std	Y+4, r1	; 0x04
     c9e:	30 97       	sbiw	r30, 0x00	; 0
     ca0:	11 f0       	breq	.+4      	; 0xca6 <OS_TCBInit+0x8e>
     ca2:	d5 83       	std	Z+5, r29	; 0x05
     ca4:	c4 83       	std	Z+4, r28	; 0x04
     ca6:	d0 93 30 04 	sts	0x0430, r29	; 0x800430 <OSTCBList+0x1>
     caa:	c0 93 2f 04 	sts	0x042F, r28	; 0x80042f <OSTCBList>
     cae:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <OSRdyGrp>
     cb2:	9d 85       	ldd	r25, Y+13	; 0x0d
     cb4:	89 2b       	or	r24, r25
     cb6:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <OSRdyGrp>
     cba:	eb 85       	ldd	r30, Y+11	; 0x0b
     cbc:	f0 e0       	ldi	r31, 0x00	; 0
     cbe:	e5 5c       	subi	r30, 0xC5	; 197
     cc0:	fb 4f       	sbci	r31, 0xFB	; 251
     cc2:	80 81       	ld	r24, Z
     cc4:	9c 85       	ldd	r25, Y+12	; 0x0c
     cc6:	89 2b       	or	r24, r25
     cc8:	80 83       	st	Z, r24
     cca:	78 94       	sei
     ccc:	80 e0       	ldi	r24, 0x00	; 0
     cce:	df 91       	pop	r29
     cd0:	cf 91       	pop	r28
     cd2:	1f 91       	pop	r17
     cd4:	08 95       	ret
     cd6:	78 94       	sei
     cd8:	86 e4       	ldi	r24, 0x46	; 70
     cda:	f9 cf       	rjmp	.-14     	; 0xcce <OS_TCBInit+0xb6>

00000cdc <OSTaskCreate>:
     cdc:	9f 92       	push	r9
     cde:	af 92       	push	r10
     ce0:	bf 92       	push	r11
     ce2:	cf 92       	push	r12
     ce4:	df 92       	push	r13
     ce6:	ef 92       	push	r14
     ce8:	ff 92       	push	r15
     cea:	0f 93       	push	r16
     cec:	1f 93       	push	r17
     cee:	cf 93       	push	r28
     cf0:	df 93       	push	r29
     cf2:	f8 94       	cli
     cf4:	c2 2f       	mov	r28, r18
     cf6:	d0 e0       	ldi	r29, 0x00	; 0
     cf8:	cc 0f       	add	r28, r28
     cfa:	dd 1f       	adc	r29, r29
     cfc:	cf 57       	subi	r28, 0x7F	; 127
     cfe:	da 4f       	sbci	r29, 0xFA	; 250
     d00:	e8 81       	ld	r30, Y
     d02:	f9 81       	ldd	r31, Y+1	; 0x01
     d04:	ef 2b       	or	r30, r31
     d06:	09 f0       	breq	.+2      	; 0xd0a <OSTaskCreate+0x2e>
     d08:	3b c0       	rjmp	.+118    	; 0xd80 <OSTaskCreate+0xa4>
     d0a:	92 2e       	mov	r9, r18
     d0c:	21 e0       	ldi	r18, 0x01	; 1
     d0e:	30 e0       	ldi	r19, 0x00	; 0
     d10:	39 83       	std	Y+1, r19	; 0x01
     d12:	28 83       	st	Y, r18
     d14:	78 94       	sei
     d16:	30 e0       	ldi	r19, 0x00	; 0
     d18:	20 e0       	ldi	r18, 0x00	; 0
     d1a:	0e 94 50 04 	call	0x8a0	; 0x8a0 <OSTaskStkInit>
     d1e:	b1 2c       	mov	r11, r1
     d20:	a1 2c       	mov	r10, r1
     d22:	d1 2c       	mov	r13, r1
     d24:	c1 2c       	mov	r12, r1
     d26:	e1 2c       	mov	r14, r1
     d28:	f1 2c       	mov	r15, r1
     d2a:	87 01       	movw	r16, r14
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	20 e0       	ldi	r18, 0x00	; 0
     d30:	50 e0       	ldi	r21, 0x00	; 0
     d32:	40 e0       	ldi	r20, 0x00	; 0
     d34:	bc 01       	movw	r22, r24
     d36:	89 2d       	mov	r24, r9
     d38:	0e 94 0c 06 	call	0xc18	; 0xc18 <OS_TCBInit>
     d3c:	18 2f       	mov	r17, r24
     d3e:	81 11       	cpse	r24, r1
     d40:	1a c0       	rjmp	.+52     	; 0xd76 <OSTaskCreate+0x9a>
     d42:	f8 94       	cli
     d44:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <OSTaskCtr>
     d48:	8f 5f       	subi	r24, 0xFF	; 255
     d4a:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <OSTaskCtr>
     d4e:	78 94       	sei
     d50:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <OSRunning>
     d54:	81 30       	cpi	r24, 0x01	; 1
     d56:	11 f4       	brne	.+4      	; 0xd5c <OSTaskCreate+0x80>
     d58:	0e 94 8b 05 	call	0xb16	; 0xb16 <OS_Sched>
     d5c:	81 2f       	mov	r24, r17
     d5e:	df 91       	pop	r29
     d60:	cf 91       	pop	r28
     d62:	1f 91       	pop	r17
     d64:	0f 91       	pop	r16
     d66:	ff 90       	pop	r15
     d68:	ef 90       	pop	r14
     d6a:	df 90       	pop	r13
     d6c:	cf 90       	pop	r12
     d6e:	bf 90       	pop	r11
     d70:	af 90       	pop	r10
     d72:	9f 90       	pop	r9
     d74:	08 95       	ret
     d76:	f8 94       	cli
     d78:	19 82       	std	Y+1, r1	; 0x01
     d7a:	18 82       	st	Y, r1
     d7c:	78 94       	sei
     d7e:	ee cf       	rjmp	.-36     	; 0xd5c <OSTaskCreate+0x80>
     d80:	78 94       	sei
     d82:	18 e2       	ldi	r17, 0x28	; 40
     d84:	eb cf       	rjmp	.-42     	; 0xd5c <OSTaskCreate+0x80>

00000d86 <OSInit>:
     d86:	0e 94 9f 04 	call	0x93e	; 0x93e <OSInitHookBegin>
     d8a:	10 92 3f 04 	sts	0x043F, r1	; 0x80043f <OSIntNesting>
     d8e:	10 92 27 04 	sts	0x0427, r1	; 0x800427 <OSLockNesting>
     d92:	10 92 37 04 	sts	0x0437, r1	; 0x800437 <OSTaskCtr>
     d96:	10 92 28 04 	sts	0x0428, r1	; 0x800428 <OSRunning>
     d9a:	10 92 31 04 	sts	0x0431, r1	; 0x800431 <OSCtxSwCtr>
     d9e:	10 92 32 04 	sts	0x0432, r1	; 0x800432 <OSCtxSwCtr+0x1>
     da2:	10 92 33 04 	sts	0x0433, r1	; 0x800433 <OSCtxSwCtr+0x2>
     da6:	10 92 34 04 	sts	0x0434, r1	; 0x800434 <OSCtxSwCtr+0x3>
     daa:	10 92 29 04 	sts	0x0429, r1	; 0x800429 <OSIdleCtr>
     dae:	10 92 2a 04 	sts	0x042A, r1	; 0x80042a <OSIdleCtr+0x1>
     db2:	10 92 2b 04 	sts	0x042B, r1	; 0x80042b <OSIdleCtr+0x2>
     db6:	10 92 2c 04 	sts	0x042C, r1	; 0x80042c <OSIdleCtr+0x3>
     dba:	10 92 3a 04 	sts	0x043A, r1	; 0x80043a <OSRdyGrp>
     dbe:	10 92 3b 04 	sts	0x043B, r1	; 0x80043b <OSRdyTbl>
     dc2:	10 92 3c 04 	sts	0x043C, r1	; 0x80043c <OSRdyTbl+0x1>
     dc6:	10 92 3d 04 	sts	0x043D, r1	; 0x80043d <OSRdyTbl+0x2>
     dca:	10 92 2e 04 	sts	0x042E, r1	; 0x80042e <OSPrioCur>
     dce:	10 92 2d 04 	sts	0x042D, r1	; 0x80042d <OSPrioHighRdy>
     dd2:	10 92 39 04 	sts	0x0439, r1	; 0x800439 <OSTCBHighRdy+0x1>
     dd6:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <OSTCBHighRdy>
     dda:	10 92 41 04 	sts	0x0441, r1	; 0x800441 <OSTCBCur+0x1>
     dde:	10 92 40 04 	sts	0x0440, r1	; 0x800440 <OSTCBCur>
     de2:	10 92 30 04 	sts	0x0430, r1	; 0x800430 <OSTCBList+0x1>
     de6:	10 92 2f 04 	sts	0x042F, r1	; 0x80042f <OSTCBList>
     dea:	e1 e8       	ldi	r30, 0x81	; 129
     dec:	f5 e0       	ldi	r31, 0x05	; 5
     dee:	11 92       	st	Z+, r1
     df0:	11 92       	st	Z+, r1
     df2:	85 e0       	ldi	r24, 0x05	; 5
     df4:	e3 3a       	cpi	r30, 0xA3	; 163
     df6:	f8 07       	cpc	r31, r24
     df8:	d1 f7       	brne	.-12     	; 0xdee <OSInit+0x68>
     dfa:	e2 e8       	ldi	r30, 0x82	; 130
     dfc:	f4 e0       	ldi	r31, 0x04	; 4
     dfe:	cf 01       	movw	r24, r30
     e00:	0f 96       	adiw	r24, 0x0f	; 15
     e02:	93 83       	std	Z+3, r25	; 0x03
     e04:	82 83       	std	Z+2, r24	; 0x02
     e06:	fc 01       	movw	r30, r24
     e08:	85 e0       	ldi	r24, 0x05	; 5
     e0a:	e2 37       	cpi	r30, 0x72	; 114
     e0c:	f8 07       	cpc	r31, r24
     e0e:	b9 f7       	brne	.-18     	; 0xdfe <OSInit+0x78>
     e10:	10 92 75 05 	sts	0x0575, r1	; 0x800575 <OSTCBTbl+0xf3>
     e14:	10 92 74 05 	sts	0x0574, r1	; 0x800574 <OSTCBTbl+0xf2>
     e18:	82 e8       	ldi	r24, 0x82	; 130
     e1a:	94 e0       	ldi	r25, 0x04	; 4
     e1c:	90 93 36 04 	sts	0x0436, r25	; 0x800436 <OSTCBFreeList+0x1>
     e20:	80 93 35 04 	sts	0x0435, r24	; 0x800435 <OSTCBFreeList>
     e24:	20 e1       	ldi	r18, 0x10	; 16
     e26:	41 e8       	ldi	r20, 0x81	; 129
     e28:	54 e0       	ldi	r21, 0x04	; 4
     e2a:	70 e0       	ldi	r23, 0x00	; 0
     e2c:	60 e0       	ldi	r22, 0x00	; 0
     e2e:	83 ea       	ldi	r24, 0xA3	; 163
     e30:	94 e0       	ldi	r25, 0x04	; 4
     e32:	0e 94 6e 06 	call	0xcdc	; 0xcdc <OSTaskCreate>
     e36:	0c 94 a0 04 	jmp	0x940	; 0x940 <OSInitHookEnd>

00000e3a <OSTaskDel>:
     e3a:	ff 92       	push	r15
     e3c:	0f 93       	push	r16
     e3e:	1f 93       	push	r17
     e40:	cf 93       	push	r28
     e42:	df 93       	push	r29
     e44:	f0 90 3f 04 	lds	r15, 0x043F	; 0x80043f <OSIntNesting>
     e48:	f1 10       	cpse	r15, r1
     e4a:	76 c0       	rjmp	.+236    	; 0xf38 <OSTaskDel+0xfe>
     e4c:	f8 94       	cli
     e4e:	8f 3f       	cpi	r24, 0xFF	; 255
     e50:	29 f4       	brne	.+10     	; 0xe5c <OSTaskDel+0x22>
     e52:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     e56:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     e5a:	81 85       	ldd	r24, Z+9	; 0x09
     e5c:	08 2f       	mov	r16, r24
     e5e:	10 e0       	ldi	r17, 0x00	; 0
     e60:	00 0f       	add	r16, r16
     e62:	11 1f       	adc	r17, r17
     e64:	f8 01       	movw	r30, r16
     e66:	ef 57       	subi	r30, 0x7F	; 127
     e68:	fa 4f       	sbci	r31, 0xFA	; 250
     e6a:	c0 81       	ld	r28, Z
     e6c:	d1 81       	ldd	r29, Z+1	; 0x01
     e6e:	20 97       	sbiw	r28, 0x00	; 0
     e70:	09 f4       	brne	.+2      	; 0xe74 <OSTaskDel+0x3a>
     e72:	5e c0       	rjmp	.+188    	; 0xf30 <OSTaskDel+0xf6>
     e74:	eb 85       	ldd	r30, Y+11	; 0x0b
     e76:	f0 e0       	ldi	r31, 0x00	; 0
     e78:	8c 85       	ldd	r24, Y+12	; 0x0c
     e7a:	80 95       	com	r24
     e7c:	e5 5c       	subi	r30, 0xC5	; 197
     e7e:	fb 4f       	sbci	r31, 0xFB	; 251
     e80:	90 81       	ld	r25, Z
     e82:	89 23       	and	r24, r25
     e84:	80 83       	st	Z, r24
     e86:	81 11       	cpse	r24, r1
     e88:	08 c0       	rjmp	.+16     	; 0xe9a <OSTaskDel+0x60>
     e8a:	8d 85       	ldd	r24, Y+13	; 0x0d
     e8c:	98 2f       	mov	r25, r24
     e8e:	90 95       	com	r25
     e90:	80 91 3a 04 	lds	r24, 0x043A	; 0x80043a <OSRdyGrp>
     e94:	89 23       	and	r24, r25
     e96:	80 93 3a 04 	sts	0x043A, r24	; 0x80043a <OSRdyGrp>
     e9a:	1f 82       	std	Y+7, r1	; 0x07
     e9c:	1e 82       	std	Y+6, r1	; 0x06
     e9e:	18 86       	std	Y+8, r1	; 0x08
     ea0:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     ea4:	8f 3f       	cpi	r24, 0xFF	; 255
     ea6:	19 f0       	breq	.+6      	; 0xeae <OSTaskDel+0x74>
     ea8:	8f 5f       	subi	r24, 0xFF	; 255
     eaa:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     eae:	78 94       	sei
     eb0:	f8 94       	cli
     eb2:	80 91 27 04 	lds	r24, 0x0427	; 0x800427 <OSLockNesting>
     eb6:	88 23       	and	r24, r24
     eb8:	19 f0       	breq	.+6      	; 0xec0 <OSTaskDel+0x86>
     eba:	81 50       	subi	r24, 0x01	; 1
     ebc:	80 93 27 04 	sts	0x0427, r24	; 0x800427 <OSLockNesting>
     ec0:	ce 01       	movw	r24, r28
     ec2:	0e 94 9b 04 	call	0x936	; 0x936 <OSTaskDelHook>
     ec6:	80 91 37 04 	lds	r24, 0x0437	; 0x800437 <OSTaskCtr>
     eca:	81 50       	subi	r24, 0x01	; 1
     ecc:	80 93 37 04 	sts	0x0437, r24	; 0x800437 <OSTaskCtr>
     ed0:	f8 01       	movw	r30, r16
     ed2:	ef 57       	subi	r30, 0x7F	; 127
     ed4:	fa 4f       	sbci	r31, 0xFA	; 250
     ed6:	11 82       	std	Z+1, r1	; 0x01
     ed8:	10 82       	st	Z, r1
     eda:	ec 81       	ldd	r30, Y+4	; 0x04
     edc:	fd 81       	ldd	r31, Y+5	; 0x05
     ede:	aa 81       	ldd	r26, Y+2	; 0x02
     ee0:	bb 81       	ldd	r27, Y+3	; 0x03
     ee2:	30 97       	sbiw	r30, 0x00	; 0
     ee4:	e1 f4       	brne	.+56     	; 0xf1e <OSTaskDel+0xe4>
     ee6:	15 96       	adiw	r26, 0x05	; 5
     ee8:	1c 92       	st	X, r1
     eea:	1e 92       	st	-X, r1
     eec:	14 97       	sbiw	r26, 0x04	; 4
     eee:	b0 93 30 04 	sts	0x0430, r27	; 0x800430 <OSTCBList+0x1>
     ef2:	a0 93 2f 04 	sts	0x042F, r26	; 0x80042f <OSTCBList>
     ef6:	80 91 35 04 	lds	r24, 0x0435	; 0x800435 <OSTCBFreeList>
     efa:	90 91 36 04 	lds	r25, 0x0436	; 0x800436 <OSTCBFreeList+0x1>
     efe:	9b 83       	std	Y+3, r25	; 0x03
     f00:	8a 83       	std	Y+2, r24	; 0x02
     f02:	d0 93 36 04 	sts	0x0436, r29	; 0x800436 <OSTCBFreeList+0x1>
     f06:	c0 93 35 04 	sts	0x0435, r28	; 0x800435 <OSTCBFreeList>
     f0a:	78 94       	sei
     f0c:	0e 94 8b 05 	call	0xb16	; 0xb16 <OS_Sched>
     f10:	8f 2d       	mov	r24, r15
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	1f 91       	pop	r17
     f18:	0f 91       	pop	r16
     f1a:	ff 90       	pop	r15
     f1c:	08 95       	ret
     f1e:	b3 83       	std	Z+3, r27	; 0x03
     f20:	a2 83       	std	Z+2, r26	; 0x02
     f22:	aa 81       	ldd	r26, Y+2	; 0x02
     f24:	bb 81       	ldd	r27, Y+3	; 0x03
     f26:	15 96       	adiw	r26, 0x05	; 5
     f28:	fc 93       	st	X, r31
     f2a:	ee 93       	st	-X, r30
     f2c:	14 97       	sbiw	r26, 0x04	; 4
     f2e:	e3 cf       	rjmp	.-58     	; 0xef6 <OSTaskDel+0xbc>
     f30:	78 94       	sei
     f32:	9c e3       	ldi	r25, 0x3C	; 60
     f34:	f9 2e       	mov	r15, r25
     f36:	ec cf       	rjmp	.-40     	; 0xf10 <OSTaskDel+0xd6>
     f38:	8f e3       	ldi	r24, 0x3F	; 63
     f3a:	f8 2e       	mov	r15, r24
     f3c:	e9 cf       	rjmp	.-46     	; 0xf10 <OSTaskDel+0xd6>

00000f3e <OSTaskDelReq>:
     f3e:	8f 3f       	cpi	r24, 0xFF	; 255
     f40:	41 f4       	brne	.+16     	; 0xf52 <OSTaskDelReq+0x14>
     f42:	f8 94       	cli
     f44:	e0 91 40 04 	lds	r30, 0x0440	; 0x800440 <OSTCBCur>
     f48:	f0 91 41 04 	lds	r31, 0x0441	; 0x800441 <OSTCBCur+0x1>
     f4c:	86 85       	ldd	r24, Z+14	; 0x0e
     f4e:	78 94       	sei
     f50:	08 95       	ret
     f52:	f8 94       	cli
     f54:	e8 2f       	mov	r30, r24
     f56:	f0 e0       	ldi	r31, 0x00	; 0
     f58:	ee 0f       	add	r30, r30
     f5a:	ff 1f       	adc	r31, r31
     f5c:	ef 57       	subi	r30, 0x7F	; 127
     f5e:	fa 4f       	sbci	r31, 0xFA	; 250
     f60:	01 90       	ld	r0, Z+
     f62:	f0 81       	ld	r31, Z
     f64:	e0 2d       	mov	r30, r0
     f66:	8b e0       	ldi	r24, 0x0B	; 11
     f68:	30 97       	sbiw	r30, 0x00	; 0
     f6a:	89 f3       	breq	.-30     	; 0xf4e <OSTaskDelReq+0x10>
     f6c:	8e e3       	ldi	r24, 0x3E	; 62
     f6e:	86 87       	std	Z+14, r24	; 0x0e
     f70:	80 e0       	ldi	r24, 0x00	; 0
     f72:	ed cf       	rjmp	.-38     	; 0xf4e <OSTaskDelReq+0x10>

00000f74 <OSTimeDly>:
     f74:	00 97       	sbiw	r24, 0x00	; 0
     f76:	11 f0       	breq	.+4      	; 0xf7c <OSTimeDly+0x8>
     f78:	0c 94 e6 05 	jmp	0xbcc	; 0xbcc <OSTimeDly.part.0>
     f7c:	08 95       	ret

00000f7e <OSTimeDlyHMSM>:
     f7e:	cf 92       	push	r12
     f80:	df 92       	push	r13
     f82:	ef 92       	push	r14
     f84:	ff 92       	push	r15
     f86:	81 11       	cpse	r24, r1
     f88:	0d c0       	rjmp	.+26     	; 0xfa4 <OSTimeDlyHMSM+0x26>
     f8a:	61 11       	cpse	r22, r1
     f8c:	0b c0       	rjmp	.+22     	; 0xfa4 <OSTimeDlyHMSM+0x26>
     f8e:	41 11       	cpse	r20, r1
     f90:	0c c0       	rjmp	.+24     	; 0xfaa <OSTimeDlyHMSM+0x2c>
     f92:	21 15       	cp	r18, r1
     f94:	31 05       	cpc	r19, r1
     f96:	61 f4       	brne	.+24     	; 0xfb0 <OSTimeDlyHMSM+0x32>
     f98:	84 e5       	ldi	r24, 0x54	; 84
     f9a:	ff 90       	pop	r15
     f9c:	ef 90       	pop	r14
     f9e:	df 90       	pop	r13
     fa0:	cf 90       	pop	r12
     fa2:	08 95       	ret
     fa4:	6c 33       	cpi	r22, 0x3C	; 60
     fa6:	08 f0       	brcs	.+2      	; 0xfaa <OSTimeDlyHMSM+0x2c>
     fa8:	4f c0       	rjmp	.+158    	; 0x1048 <OSTimeDlyHMSM+0xca>
     faa:	4c 33       	cpi	r20, 0x3C	; 60
     fac:	08 f0       	brcs	.+2      	; 0xfb0 <OSTimeDlyHMSM+0x32>
     fae:	4e c0       	rjmp	.+156    	; 0x104c <OSTimeDlyHMSM+0xce>
     fb0:	28 3e       	cpi	r18, 0xE8	; 232
     fb2:	93 e0       	ldi	r25, 0x03	; 3
     fb4:	39 07       	cpc	r19, r25
     fb6:	08 f0       	brcs	.+2      	; 0xfba <OSTimeDlyHMSM+0x3c>
     fb8:	4b c0       	rjmp	.+150    	; 0x1050 <OSTimeDlyHMSM+0xd2>
     fba:	f9 01       	movw	r30, r18
     fbc:	58 2f       	mov	r21, r24
     fbe:	26 2f       	mov	r18, r22
     fc0:	30 e0       	ldi	r19, 0x00	; 0
     fc2:	ac e3       	ldi	r26, 0x3C	; 60
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	0e 94 98 08 	call	0x1130	; 0x1130 <__umulhisi3>
     fca:	6b 01       	movw	r12, r22
     fcc:	7c 01       	movw	r14, r24
     fce:	c4 0e       	add	r12, r20
     fd0:	d1 1c       	adc	r13, r1
     fd2:	e1 1c       	adc	r14, r1
     fd4:	f1 1c       	adc	r15, r1
     fd6:	25 2f       	mov	r18, r21
     fd8:	30 e0       	ldi	r19, 0x00	; 0
     fda:	a0 e1       	ldi	r26, 0x10	; 16
     fdc:	be e0       	ldi	r27, 0x0E	; 14
     fde:	0e 94 98 08 	call	0x1130	; 0x1130 <__umulhisi3>
     fe2:	a7 01       	movw	r20, r14
     fe4:	96 01       	movw	r18, r12
     fe6:	26 0f       	add	r18, r22
     fe8:	37 1f       	adc	r19, r23
     fea:	48 1f       	adc	r20, r24
     fec:	59 1f       	adc	r21, r25
     fee:	a4 e6       	ldi	r26, 0x64	; 100
     ff0:	b0 e0       	ldi	r27, 0x00	; 0
     ff2:	0e 94 a7 08 	call	0x114e	; 0x114e <__muluhisi3>
     ff6:	6b 01       	movw	r12, r22
     ff8:	7c 01       	movw	r14, r24
     ffa:	9f 01       	movw	r18, r30
     ffc:	0e 94 98 08 	call	0x1130	; 0x1130 <__umulhisi3>
    1000:	6c 50       	subi	r22, 0x0C	; 12
    1002:	7e 4f       	sbci	r23, 0xFE	; 254
    1004:	8f 4f       	sbci	r24, 0xFF	; 255
    1006:	9f 4f       	sbci	r25, 0xFF	; 255
    1008:	28 ee       	ldi	r18, 0xE8	; 232
    100a:	33 e0       	ldi	r19, 0x03	; 3
    100c:	40 e0       	ldi	r20, 0x00	; 0
    100e:	50 e0       	ldi	r21, 0x00	; 0
    1010:	0e 94 76 08 	call	0x10ec	; 0x10ec <__udivmodsi4>
    1014:	d7 01       	movw	r26, r14
    1016:	c6 01       	movw	r24, r12
    1018:	82 0f       	add	r24, r18
    101a:	93 1f       	adc	r25, r19
    101c:	a4 1f       	adc	r26, r20
    101e:	b5 1f       	adc	r27, r21
    1020:	7d 01       	movw	r14, r26
    1022:	0e 94 ba 07 	call	0xf74	; 0xf74 <OSTimeDly>
    1026:	e1 14       	cp	r14, r1
    1028:	f1 04       	cpc	r15, r1
    102a:	11 f4       	brne	.+4      	; 0x1030 <OSTimeDlyHMSM+0xb2>
    102c:	80 e0       	ldi	r24, 0x00	; 0
    102e:	b5 cf       	rjmp	.-150    	; 0xf9a <OSTimeDlyHMSM+0x1c>
    1030:	80 e0       	ldi	r24, 0x00	; 0
    1032:	90 e8       	ldi	r25, 0x80	; 128
    1034:	0e 94 e6 05 	call	0xbcc	; 0xbcc <OSTimeDly.part.0>
    1038:	80 e0       	ldi	r24, 0x00	; 0
    103a:	90 e8       	ldi	r25, 0x80	; 128
    103c:	0e 94 e6 05 	call	0xbcc	; 0xbcc <OSTimeDly.part.0>
    1040:	81 e0       	ldi	r24, 0x01	; 1
    1042:	e8 1a       	sub	r14, r24
    1044:	f1 08       	sbc	r15, r1
    1046:	ef cf       	rjmp	.-34     	; 0x1026 <OSTimeDlyHMSM+0xa8>
    1048:	81 e5       	ldi	r24, 0x51	; 81
    104a:	a7 cf       	rjmp	.-178    	; 0xf9a <OSTimeDlyHMSM+0x1c>
    104c:	82 e5       	ldi	r24, 0x52	; 82
    104e:	a5 cf       	rjmp	.-182    	; 0xf9a <OSTimeDlyHMSM+0x1c>
    1050:	83 e5       	ldi	r24, 0x53	; 83
    1052:	a3 cf       	rjmp	.-186    	; 0xf9a <OSTimeDlyHMSM+0x1c>

00001054 <main>:

}

int main( void )
{
    robo_Setup();                                          /* initialize HAL for RoboKar     */
    1054:	0e 94 75 02 	call	0x4ea	; 0x4ea <robo_Setup>
    OSInit();                                              /* initialize UCOS-II kernel      */
    1058:	0e 94 c3 06 	call	0xd86	; 0xd86 <OSInit>

    robo_motorSpeed(STOP_SPEED, STOP_SPEED);               /* Stop the robot                 */
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	60 e0       	ldi	r22, 0x00	; 0
    1060:	90 e0       	ldi	r25, 0x00	; 0
    1062:	80 e0       	ldi	r24, 0x00	; 0
    1064:	0e 94 98 01 	call	0x330	; 0x330 <robo_motorSpeed>
    myrobot.rspeed   = STOP_SPEED;                         /* Initialize myrobot states      */
    1068:	10 92 9b 02 	sts	0x029B, r1	; 0x80029b <myrobot+0x1>
    106c:	10 92 9a 02 	sts	0x029A, r1	; 0x80029a <myrobot>
    myrobot.lspeed   = STOP_SPEED;
    1070:	10 92 9d 02 	sts	0x029D, r1	; 0x80029d <myrobot+0x3>
    1074:	10 92 9c 02 	sts	0x029C, r1	; 0x80029c <myrobot+0x2>
    myrobot.obstacle = 0;                                  /*  No collisioin                 */
    1078:	10 92 9e 02 	sts	0x029E, r1	; 0x80029e <myrobot+0x4>

    OSTaskCreate(TaskStart,                                /* create TaskStart Task          */
    107c:	21 e0       	ldi	r18, 0x01	; 1
    107e:	4e e9       	ldi	r20, 0x9E	; 158
    1080:	53 e0       	ldi	r21, 0x03	; 3
    1082:	70 e0       	ldi	r23, 0x00	; 0
    1084:	60 e0       	ldi	r22, 0x00	; 0
    1086:	87 ea       	ldi	r24, 0xA7	; 167
    1088:	90 e0       	ldi	r25, 0x00	; 0
    108a:	0e 94 6e 06 	call	0xcdc	; 0xcdc <OSTaskCreate>
                (void *)0,
                (void *)&TaskStartStk[TASK_STK_SZ - 1],
                TASK_START_PRIO);
	robo_Honk(); robo_wait4goPress();                      /* Wait for to GO                 */
    108e:	0e 94 3b 02 	call	0x476	; 0x476 <robo_Honk>
    1092:	0e 94 61 02 	call	0x4c2	; 0x4c2 <robo_wait4goPress>
    OSStart();                                             /* Start multitasking             */
    1096:	0e 94 27 05 	call	0xa4e	; 0xa4e <OSStart>
    109a:	ff cf       	rjmp	.-2      	; 0x109a <main+0x46>

0000109c <__udivmodhi4>:
    109c:	aa 1b       	sub	r26, r26
    109e:	bb 1b       	sub	r27, r27
    10a0:	51 e1       	ldi	r21, 0x11	; 17
    10a2:	07 c0       	rjmp	.+14     	; 0x10b2 <__udivmodhi4_ep>

000010a4 <__udivmodhi4_loop>:
    10a4:	aa 1f       	adc	r26, r26
    10a6:	bb 1f       	adc	r27, r27
    10a8:	a6 17       	cp	r26, r22
    10aa:	b7 07       	cpc	r27, r23
    10ac:	10 f0       	brcs	.+4      	; 0x10b2 <__udivmodhi4_ep>
    10ae:	a6 1b       	sub	r26, r22
    10b0:	b7 0b       	sbc	r27, r23

000010b2 <__udivmodhi4_ep>:
    10b2:	88 1f       	adc	r24, r24
    10b4:	99 1f       	adc	r25, r25
    10b6:	5a 95       	dec	r21
    10b8:	a9 f7       	brne	.-22     	; 0x10a4 <__udivmodhi4_loop>
    10ba:	80 95       	com	r24
    10bc:	90 95       	com	r25
    10be:	bc 01       	movw	r22, r24
    10c0:	cd 01       	movw	r24, r26
    10c2:	08 95       	ret

000010c4 <__divmodhi4>:
    10c4:	97 fb       	bst	r25, 7
    10c6:	07 2e       	mov	r0, r23
    10c8:	16 f4       	brtc	.+4      	; 0x10ce <__divmodhi4+0xa>
    10ca:	00 94       	com	r0
    10cc:	07 d0       	rcall	.+14     	; 0x10dc <__divmodhi4_neg1>
    10ce:	77 fd       	sbrc	r23, 7
    10d0:	09 d0       	rcall	.+18     	; 0x10e4 <__divmodhi4_neg2>
    10d2:	0e 94 4e 08 	call	0x109c	; 0x109c <__udivmodhi4>
    10d6:	07 fc       	sbrc	r0, 7
    10d8:	05 d0       	rcall	.+10     	; 0x10e4 <__divmodhi4_neg2>
    10da:	3e f4       	brtc	.+14     	; 0x10ea <__divmodhi4_exit>

000010dc <__divmodhi4_neg1>:
    10dc:	90 95       	com	r25
    10de:	81 95       	neg	r24
    10e0:	9f 4f       	sbci	r25, 0xFF	; 255
    10e2:	08 95       	ret

000010e4 <__divmodhi4_neg2>:
    10e4:	70 95       	com	r23
    10e6:	61 95       	neg	r22
    10e8:	7f 4f       	sbci	r23, 0xFF	; 255

000010ea <__divmodhi4_exit>:
    10ea:	08 95       	ret

000010ec <__udivmodsi4>:
    10ec:	a1 e2       	ldi	r26, 0x21	; 33
    10ee:	1a 2e       	mov	r1, r26
    10f0:	aa 1b       	sub	r26, r26
    10f2:	bb 1b       	sub	r27, r27
    10f4:	fd 01       	movw	r30, r26
    10f6:	0d c0       	rjmp	.+26     	; 0x1112 <__udivmodsi4_ep>

000010f8 <__udivmodsi4_loop>:
    10f8:	aa 1f       	adc	r26, r26
    10fa:	bb 1f       	adc	r27, r27
    10fc:	ee 1f       	adc	r30, r30
    10fe:	ff 1f       	adc	r31, r31
    1100:	a2 17       	cp	r26, r18
    1102:	b3 07       	cpc	r27, r19
    1104:	e4 07       	cpc	r30, r20
    1106:	f5 07       	cpc	r31, r21
    1108:	20 f0       	brcs	.+8      	; 0x1112 <__udivmodsi4_ep>
    110a:	a2 1b       	sub	r26, r18
    110c:	b3 0b       	sbc	r27, r19
    110e:	e4 0b       	sbc	r30, r20
    1110:	f5 0b       	sbc	r31, r21

00001112 <__udivmodsi4_ep>:
    1112:	66 1f       	adc	r22, r22
    1114:	77 1f       	adc	r23, r23
    1116:	88 1f       	adc	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	1a 94       	dec	r1
    111c:	69 f7       	brne	.-38     	; 0x10f8 <__udivmodsi4_loop>
    111e:	60 95       	com	r22
    1120:	70 95       	com	r23
    1122:	80 95       	com	r24
    1124:	90 95       	com	r25
    1126:	9b 01       	movw	r18, r22
    1128:	ac 01       	movw	r20, r24
    112a:	bd 01       	movw	r22, r26
    112c:	cf 01       	movw	r24, r30
    112e:	08 95       	ret

00001130 <__umulhisi3>:
    1130:	a2 9f       	mul	r26, r18
    1132:	b0 01       	movw	r22, r0
    1134:	b3 9f       	mul	r27, r19
    1136:	c0 01       	movw	r24, r0
    1138:	a3 9f       	mul	r26, r19
    113a:	70 0d       	add	r23, r0
    113c:	81 1d       	adc	r24, r1
    113e:	11 24       	eor	r1, r1
    1140:	91 1d       	adc	r25, r1
    1142:	b2 9f       	mul	r27, r18
    1144:	70 0d       	add	r23, r0
    1146:	81 1d       	adc	r24, r1
    1148:	11 24       	eor	r1, r1
    114a:	91 1d       	adc	r25, r1
    114c:	08 95       	ret

0000114e <__muluhisi3>:
    114e:	0e 94 98 08 	call	0x1130	; 0x1130 <__umulhisi3>
    1152:	a5 9f       	mul	r26, r21
    1154:	90 0d       	add	r25, r0
    1156:	b4 9f       	mul	r27, r20
    1158:	90 0d       	add	r25, r0
    115a:	a4 9f       	mul	r26, r20
    115c:	80 0d       	add	r24, r0
    115e:	91 1d       	adc	r25, r1
    1160:	11 24       	eor	r1, r1
    1162:	08 95       	ret

00001164 <_exit>:
    1164:	f8 94       	cli

00001166 <__stop_program>:
    1166:	ff cf       	rjmp	.-2      	; 0x1166 <__stop_program>
